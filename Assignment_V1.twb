<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sample - Superstore' inline='true' name='federated.0lmqmfn1fbhv4h1gifrmf0ouph26' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='textscan.0nu7svf0ck48mi18s06sn0ma0sym'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/User/Downloads/Sample - Superstore.csv' dataRefreshTime='' directory='C:/Users/User/Downloads' filename='C:/Users/User/AppData/Local/Temp/TableauTemp/122qzjk0r1of0s1fg5b7w0rj44ja/Sample - Superstore.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0nu7svf0ck48mi18s06sn0ma0sym' name='Sample - Superstore.csv' table='[Sample - Superstore#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:U9995:no:A1:U9995:1' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='Profit Ratio' ordinal='0' />
            <column datatype='string' name='Category' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='string' name='Country' ordinal='3' />
            <column datatype='string' name='Customer Name' ordinal='4' />
            <column datatype='real' name='Discount' ordinal='5' />
            <column datatype='integer' name='Number of Records' ordinal='6' />
            <column datatype='date' name='Order Date' ordinal='7' />
            <column datatype='string' name='Order ID' ordinal='8' />
            <column datatype='integer' name='Postal Code' ordinal='9' />
            <column datatype='string' name='Manufacturer' ordinal='10' />
            <column datatype='string' name='Product Name' ordinal='11' />
            <column datatype='integer' name='Profit' ordinal='12' />
            <column datatype='integer' name='Quantity' ordinal='13' />
            <column datatype='string' name='Region' ordinal='14' />
            <column datatype='integer' name='Sales' ordinal='15' />
            <column datatype='string' name='Segment' ordinal='16' />
            <column datatype='date' name='Ship Date' ordinal='17' />
            <column datatype='string' name='Ship Mode' ordinal='18' />
            <column datatype='string' name='State' ordinal='19' />
            <column datatype='string' name='Sub-Category' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Profit Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit Ratio]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Profit Ratio</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Manufacturer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Manufacturer]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Manufacturer</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sample - Superstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>89946</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sales Per Segment' datatype='integer' name='[Calculation_1347702224487878657]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Segment] : SUM([Sales]) }' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Customers in 2014 or 2015 or 2016' delimiter=',' name='[Set 10]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Set 3]' function='reference' />
          <groupfilter field='[Set 5]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Customers in earlier years but not in recent year 2017' delimiter=',' name='[Set 11]' name-style='unqualified'>
        <groupfilter function='except'>
          <groupfilter field='[Set 10]' function='reference' />
          <groupfilter field='[Set 4]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Customers 2014' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter from='&quot;Aaron Bergman&quot;' function='range' level='[Customer Name]' to='&quot;Aaron Smayling&quot;' />
          <groupfilter from='&quot;Adam Hart&quot;' function='range' level='[Customer Name]' to='&quot;Adrian Hane&quot;' />
          <groupfilter from='&quot;Aimee Bixby&quot;' function='range' level='[Customer Name]' to='&quot;Alan Dominguez&quot;' />
          <groupfilter from='&quot;Alan Hwang&quot;' function='range' level='[Customer Name]' to='&quot;Alejandro Grove&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Aleksandra Gannaway&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Alex Avila&quot;' />
          <groupfilter from='&quot;Alex Russell&quot;' function='range' level='[Customer Name]' to='&quot;Amy Cox&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Andrew Allen&quot;' />
          <groupfilter from='&quot;Andrew Roberts&quot;' function='range' level='[Customer Name]' to='&quot;Andy Yotov&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Angele Hood&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ann Blume&quot;' />
          <groupfilter from='&quot;Ann Steele&quot;' function='range' level='[Customer Name]' to='&quot;Anna Chung&quot;' />
          <groupfilter from='&quot;Anna Häberlin&quot;' function='range' level='[Customer Name]' to='&quot;Anthony Johnson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Anthony Rawles&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Arianne Irving&quot;' />
          <groupfilter from='&quot;Art Foster&quot;' function='range' level='[Customer Name]' to='&quot;Bart Pistole&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Becky Castell&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Becky Martin&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ben Ferrer&quot;' />
          <groupfilter from='&quot;Ben Wallace&quot;' function='range' level='[Customer Name]' to='&quot;Benjamin Patterson&quot;' />
          <groupfilter from='&quot;Berenike Kampe&quot;' function='range' level='[Customer Name]' to='&quot;Beth Thompson&quot;' />
          <groupfilter from='&quot;Bill Shonely&quot;' function='range' level='[Customer Name]' to='&quot;Bill Tyler&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bobby Trafton&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Brad Norvell&quot;' />
          <groupfilter from='&quot;Bradley Drucker&quot;' function='range' level='[Customer Name]' to='&quot;Bradley Talbott&quot;' />
          <groupfilter from='&quot;Brendan Sweed&quot;' function='range' level='[Customer Name]' to='&quot;Brosina Hoffman&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bruce Geld&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bruce Stewart&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bryan Mills&quot;' />
          <groupfilter from='&quot;Candace McMahon&quot;' function='range' level='[Customer Name]' to='&quot;Cari Schnelling&quot;' />
          <groupfilter from='&quot;Carl Ludwig&quot;' function='range' level='[Customer Name]' to='&quot;Carlos Daly&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Carlos Soltero&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Carol Adams&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Carol Triggs&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Cassandra Brandow&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Cathy Prescott&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Chad Cunningham&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Chad Sievert&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Charles Crestani&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Charles Sheldon&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Chloris Kastensmidt&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Chris Cortes&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Chris Selesnick&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Christina Anderson&quot;' />
          <groupfilter from='&quot;Christina VanderZanden&quot;' function='range' level='[Customer Name]' to='&quot;Christine Sundaresam&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Christopher Schild&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Chuck Magee&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Cindy Chapman&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Cindy Stewart&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Clay Ludtke&quot;' />
          <groupfilter from='&quot;Clytie Kelty&quot;' function='range' level='[Customer Name]' to='&quot;Corey-Lock&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Craig Carreira&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Craig Carroll&quot;' />
          <groupfilter from='&quot;Craig Molinari&quot;' function='range' level='[Customer Name]' to='&quot;Cynthia Delaney&quot;' />
          <groupfilter from='&quot;Damala Kotsonis&quot;' function='range' level='[Customer Name]' to='&quot;Dan Lawera&quot;' />
          <groupfilter from='&quot;Daniel Byrd&quot;' function='range' level='[Customer Name]' to='&quot;Darrin Sayre&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Dave Brooks&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Dave Hallsten&quot;' />
          <groupfilter from='&quot;David Flashing&quot;' function='range' level='[Customer Name]' to='&quot;David Wiener&quot;' />
          <groupfilter from='&quot;Dean Katz&quot;' function='range' level='[Customer Name]' to='&quot;Dennis Pardue&quot;' />
          <groupfilter from='&quot;Denny Joy&quot;' function='range' level='[Customer Name]' to='&quot;Dianna Wilson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Don Jones&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Don Miller&quot;' />
          <groupfilter from='&quot;Dorothy Badders&quot;' function='range' level='[Customer Name]' to='&quot;Doug Bickford&quot;' />
          <groupfilter from='&quot;Duane Benoit&quot;' function='range' level='[Customer Name]' to='&quot;Ed Jacobs&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Edward Hooks&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Eileen Kiefer&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Elizabeth Moffitt&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ellis Ballard&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Emily Burns&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Emily Ducich&quot;' />
          <groupfilter from='&quot;Emily Phan&quot;' function='range' level='[Customer Name]' to='&quot;Eric Hoffmann&quot;' />
          <groupfilter from='&quot;Erica Hackney&quot;' function='range' level='[Customer Name]' to='&quot;Erin Smith&quot;' />
          <groupfilter from='&quot;Eugene Hildebrand&quot;' function='range' level='[Customer Name]' to='&quot;Evan Henry&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Filia McAdams&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Frank Atkinson&quot;' />
          <groupfilter from='&quot;Frank Gastineau&quot;' function='range' level='[Customer Name]' to='&quot;Fred Chung&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Fred Hopkins&quot;' />
          <groupfilter from='&quot;Gary Hansen&quot;' function='range' level='[Customer Name]' to='&quot;Gary Zandusky&quot;' />
          <groupfilter from='&quot;Gene McClure&quot;' function='range' level='[Customer Name]' to='&quot;Georgia Rosenberg&quot;' />
          <groupfilter from='&quot;Giulietta Dortch&quot;' function='range' level='[Customer Name]' to='&quot;Greg Guthrie&quot;' />
          <groupfilter from='&quot;Greg Matthias&quot;' function='range' level='[Customer Name]' to='&quot;Guy Phonely&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Hallie Redmond&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Harold Dahlen&quot;' />
          <groupfilter from='&quot;Harold Pawlan&quot;' function='range' level='[Customer Name]' to='&quot;Harry Marie&quot;' />
          <groupfilter from='&quot;Heather Kirkland&quot;' function='range' level='[Customer Name]' to='&quot;Helen Andreada&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Henry Goldwyn&quot;' />
          <groupfilter from='&quot;Herbert Flentye&quot;' function='range' level='[Customer Name]' to='&quot;Jamie Kunitz&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Janet Lee&quot;' />
          <groupfilter from='&quot;Janet Molinari&quot;' function='range' level='[Customer Name]' to='&quot;Jason Fortune-&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jason Klamczynski&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jasper Cacioppo&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jay Kimmel&quot;' />
          <groupfilter from='&quot;Jennifer Braxton&quot;' function='range' level='[Customer Name]' to='&quot;Jennifer Halladay&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jennifer Patt&quot;' />
          <groupfilter from='&quot;Jeremy Farry&quot;' function='range' level='[Customer Name]' to='&quot;Jessica Myrick&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jill Fjeld&quot;' />
          <groupfilter from='&quot;Jill Stevenson&quot;' function='range' level='[Customer Name]' to='&quot;Jim Mitchum&quot;' />
          <groupfilter from='&quot;Joe Elijah&quot;' function='range' level='[Customer Name]' to='&quot;Joel Eaton&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;John Castell&quot;' />
          <groupfilter from='&quot;John Grady&quot;' function='range' level='[Customer Name]' to='&quot;Jonathan Doherty&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Joni Blumstein&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Joni Sundaresam&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Joseph Airdo&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Joseph Holt&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Joy Daniels&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Joy Smith&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Julia Dunbar&quot;' />
          <groupfilter from='&quot;Julie Creighton&quot;' function='range' level='[Customer Name]' to='&quot;Justin Deggeller&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Justin MacKendrick&quot;' />
          <groupfilter from='&quot;Karen Bern&quot;' function='range' level='[Customer Name]' to='&quot;Karen Ferguson&quot;' />
          <groupfilter from='&quot;Karl Braun&quot;' function='range' level='[Customer Name]' to='&quot;Katherine Nockton&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Katrina Edelman&quot;' />
          <groupfilter from='&quot;Kean Nguyen&quot;' function='range' level='[Customer Name]' to='&quot;Kelly Andreada&quot;' />
          <groupfilter from='&quot;Kelly Lampkin&quot;' function='range' level='[Customer Name]' to='&quot;Ken Brennan&quot;' />
          <groupfilter from='&quot;Ken Heidel&quot;' function='range' level='[Customer Name]' to='&quot;Kunst Miller&quot;' />
          <groupfilter from='&quot;Larry Hughes&quot;' function='range' level='[Customer Name]' to='&quot;Lauren Leatherbury&quot;' />
          <groupfilter from='&quot;Lena Creighton&quot;' function='range' level='[Customer Name]' to='&quot;Linda Cazamias&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Lindsay Shagiari&quot;' />
          <groupfilter from='&quot;Lisa DeCherney&quot;' function='range' level='[Customer Name]' to='&quot;Liz Pelletier&quot;' />
          <groupfilter from='&quot;Liz Thompson&quot;' function='range' level='[Customer Name]' to='&quot;Logan Haushalter&quot;' />
          <groupfilter from='&quot;Luke Foster&quot;' function='range' level='[Customer Name]' to='&quot;Maria Etezadi&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Maribeth Dona&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Maribeth Schnelling&quot;' />
          <groupfilter from='&quot;Marina Lichtenstein&quot;' function='range' level='[Customer Name]' to='&quot;Matt Connell&quot;' />
          <groupfilter from='&quot;Matthew Clasen&quot;' function='range' level='[Customer Name]' to='&quot;Max Engle&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Maxwell Schwartz&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Maya Herman&quot;' />
          <groupfilter from='&quot;Melanie Seite&quot;' function='range' level='[Customer Name]' to='&quot;Michael Nguyen&quot;' />
          <groupfilter from='&quot;Michael Stewart&quot;' function='range' level='[Customer Name]' to='&quot;Michelle Huthwaite&quot;' />
          <groupfilter from='&quot;Michelle Moray&quot;' function='range' level='[Customer Name]' to='&quot;Mick Crebagga&quot;' />
          <groupfilter from='&quot;Mike Caudle&quot;' function='range' level='[Customer Name]' to='&quot;Mike Vittorini&quot;' />
          <groupfilter from='&quot;Mitch Webber&quot;' function='range' level='[Customer Name]' to='&quot;Monica Federle&quot;' />
          <groupfilter from='&quot;Muhammed MacIntyre&quot;' function='range' level='[Customer Name]' to='&quot;Neil Französisch&quot;' />
          <groupfilter from='&quot;Nick Crebassa&quot;' function='range' level='[Customer Name]' to='&quot;Nona Balk&quot;' />
          <groupfilter from='&quot;Nora Pelletier&quot;' function='range' level='[Customer Name]' to='&quot;Odella Nelson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Pamela Coakley&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Pamela Stobb&quot;' />
          <groupfilter from='&quot;Patrick Gardner&quot;' function='range' level='[Customer Name]' to='&quot;Peter Fuller&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Philip Brown&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Philip Fox&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Phillina Ober&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Phillip Breyer&quot;' />
          <groupfilter from='&quot;Pierre Wener&quot;' function='range' level='[Customer Name]' to='&quot;Ralph Arnett&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Randy Bradley&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Randy Ferguson&quot;' />
          <groupfilter from='&quot;Raymond Messe&quot;' function='range' level='[Customer Name]' to='&quot;Rick Reed&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Rob Dowd&quot;' />
          <groupfilter from='&quot;Rob Lucas&quot;' function='range' level='[Customer Name]' to='&quot;Robert Barroso&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Robert Marley&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Roger Demir&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Roland Fjeld&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Roland Schwarz&quot;' />
          <groupfilter from='&quot;Ross Baird&quot;' function='range' level='[Customer Name]' to='&quot;Roy Phan&quot;' />
          <groupfilter from='&quot;Ruben Ausman&quot;' function='range' level='[Customer Name]' to='&quot;Sally Hughsby&quot;' />
          <groupfilter from='&quot;Sally Matthias&quot;' function='range' level='[Customer Name]' to='&quot;Sandra Flanagan&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Sanjit Chand&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Sanjit Engle&quot;' />
          <groupfilter from='&quot;Saphhira Shifley&quot;' function='range' level='[Customer Name]' to='&quot;Sarah Foster&quot;' />
          <groupfilter from='&quot;Scot Wooten&quot;' function='range' level='[Customer Name]' to='&quot;Sean Miller&quot;' />
          <groupfilter from='&quot;Seth Vernon&quot;' function='range' level='[Customer Name]' to='&quot;Sharelle Roach&quot;' />
          <groupfilter from='&quot;Sheri Gordon&quot;' function='range' level='[Customer Name]' to='&quot;Sibella Parks&quot;' />
          <groupfilter from='&quot;Sonia Cooley&quot;' function='range' level='[Customer Name]' to='&quot;Stephanie Phelps&quot;' />
          <groupfilter from='&quot;Steve Carroll&quot;' function='range' level='[Customer Name]' to='&quot;Steven Ward&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Stewart Visinsky&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Sue Ann Reed&quot;' />
          <groupfilter from='&quot;Sung Pak&quot;' function='range' level='[Customer Name]' to='&quot;Susan Gilcrest&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Susan Pistek&quot;' />
          <groupfilter from='&quot;Suzanne McNair&quot;' function='range' level='[Customer Name]' to='&quot;Tanja Norvell&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ted Trevino&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Thea Hendricks&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Thea Hudgings&quot;' />
          <groupfilter from='&quot;Theresa Swint&quot;' function='range' level='[Customer Name]' to='&quot;Tim Brockman&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Toby Braunhardt&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Toby Carlisle&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Toby Ritter&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Toby Swindell&quot;' />
          <groupfilter from='&quot;Todd Sumrall&quot;' function='range' level='[Customer Name]' to='&quot;Tom Boeckenhauer&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Tom Stivers&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Tony Chapman&quot;' />
          <groupfilter from='&quot;Tony Sayre&quot;' function='range' level='[Customer Name]' to='&quot;Tracy Hopkins&quot;' />
          <groupfilter from='&quot;Tracy Zic&quot;' function='range' level='[Customer Name]' to='&quot;Trudy Glocke&quot;' />
          <groupfilter from='&quot;Valerie Dominguez&quot;' function='range' level='[Customer Name]' to='&quot;Vicky Freymann&quot;' />
          <groupfilter from='&quot;Victoria Pisteka&quot;' function='range' level='[Customer Name]' to='&quot;Xylona Preis&quot;' />
          <groupfilter from='&quot;Yoseph Carroll&quot;' function='range' level='[Customer Name]' to='&quot;Zuschuss Donatelli&quot;' />
        </groupfilter>
      </group>
      <group caption='Customers 2015' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Customer Name]' member='&quot;Aaron Hawkins&quot;' />
          <groupfilter from='&quot;Adam Bellavance&quot;' function='range' level='[Customer Name]' to='&quot;Adrian Barton&quot;' />
          <groupfilter from='&quot;Aimee Bixby&quot;' function='range' level='[Customer Name]' to='&quot;Alejandro Grove&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Aleksandra Gannaway&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Alex Avila&quot;' />
          <groupfilter from='&quot;Alex Russell&quot;' function='range' level='[Customer Name]' to='&quot;Allen Armold&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Allen Rosenblatt&quot;' />
          <groupfilter from='&quot;Alyssa Tate&quot;' function='range' level='[Customer Name]' to='&quot;Amy Hunt&quot;' />
          <groupfilter from='&quot;Andrew Gjertsen&quot;' function='range' level='[Customer Name]' to='&quot;Andy Reiter&quot;' />
          <groupfilter from='&quot;Ann Blume&quot;' function='range' level='[Customer Name]' to='&quot;Anna Andreadi&quot;' />
          <groupfilter from='&quot;Anna Gayman&quot;' function='range' level='[Customer Name]' to='&quot;Anthony Jacobs&quot;' />
          <groupfilter from='&quot;Anthony Rawles&quot;' function='range' level='[Customer Name]' to='&quot;Arthur Gainer&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Arthur Wiediger&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ashley Jarboe&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Barbara Fisher&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Barry Blumstein&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Barry Französisch&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Barry Gonzalez&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Barry Weirich&quot;' />
          <groupfilter from='&quot;Bart Pistole&quot;' function='range' level='[Customer Name]' to='&quot;Becky Castell&quot;' />
          <groupfilter from='&quot;Becky Pak&quot;' function='range' level='[Customer Name]' to='&quot;Ben Peterman&quot;' />
          <groupfilter from='&quot;Benjamin Patterson&quot;' function='range' level='[Customer Name]' to='&quot;Berenike Kampe&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Beth Thompson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bill Donatelli&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bill Stewart&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bill Tyler&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bobby Odegard&quot;' />
          <groupfilter from='&quot;Brad Eason&quot;' function='range' level='[Customer Name]' to='&quot;Bradley Drucker&quot;' />
          <groupfilter from='&quot;Brenda Bowman&quot;' function='range' level='[Customer Name]' to='&quot;Brian Dahlen&quot;' />
          <groupfilter from='&quot;Brian Derr&quot;' function='range' level='[Customer Name]' to='&quot;Bruce Stewart&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bryan Mills&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bryan Spruell&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Cari Sayre&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Cari Schnelling&quot;' />
          <groupfilter from='&quot;Carl Weiss&quot;' function='range' level='[Customer Name]' to='&quot;Carol Adams&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Carol Triggs&quot;' />
          <groupfilter from='&quot;Cassandra Brandow&quot;' function='range' level='[Customer Name]' to='&quot;Charles Crestani&quot;' />
          <groupfilter from='&quot;Charlotte Melton&quot;' function='range' level='[Customer Name]' to='&quot;Chris Cortes&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Chris Selesnick&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Christina Anderson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Christine Phan&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Christine Sundaresam&quot;' />
          <groupfilter from='&quot;Christopher Martinez&quot;' function='range' level='[Customer Name]' to='&quot;Chuck Clark&quot;' />
          <groupfilter from='&quot;Cindy Schnelling&quot;' function='range' level='[Customer Name]' to='&quot;Claudia Bergmann&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Clay Ludtke&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Clytie Kelty&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Corey Catlett&quot;' />
          <groupfilter from='&quot;Corey-Lock&quot;' function='range' level='[Customer Name]' to='&quot;Craig Carroll&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Craig Molinari&quot;' />
          <groupfilter from='&quot;Craig Yedwab&quot;' function='range' level='[Customer Name]' to='&quot;Cynthia Delaney&quot;' />
          <groupfilter from='&quot;Cyra Reiten&quot;' function='range' level='[Customer Name]' to='&quot;Dana Kaydos&quot;' />
          <groupfilter from='&quot;Daniel Lacy&quot;' function='range' level='[Customer Name]' to='&quot;Darrin Martin&quot;' />
          <groupfilter from='&quot;Dave Hallsten&quot;' function='range' level='[Customer Name]' to='&quot;David Flashing&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;David Philippe&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;David Smith&quot;' />
          <groupfilter from='&quot;Dean Braden&quot;' function='range' level='[Customer Name]' to='&quot;Deirdre Greer&quot;' />
          <groupfilter from='&quot;Denise Leinenbach&quot;' function='range' level='[Customer Name]' to='&quot;Denny Ordway&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Dianna Vittorini&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Dionis Lloyd&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Don Miller&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Dorothy Wardle&quot;' />
          <groupfilter from='&quot;Doug Bickford&quot;' function='range' level='[Customer Name]' to='&quot;Duane Huffman&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ed Braxton&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ed Jacobs&quot;' />
          <groupfilter from='&quot;Edward Becker&quot;' function='range' level='[Customer Name]' to='&quot;Emily Phan&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Eric Hoffmann&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Eric Murdock&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Erica Hackney&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Erica Smith&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Erin Ashbrook&quot;' />
          <groupfilter from='&quot;Erin Smith&quot;' function='range' level='[Customer Name]' to='&quot;Eugene Moren&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Evan Bailliet&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Evan Minnotte&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Frank Atkinson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Frank Carlisle&quot;' />
          <groupfilter from='&quot;Frank Merwin&quot;' function='range' level='[Customer Name]' to='&quot;Gary Hwang&quot;' />
          <groupfilter from='&quot;Gary Zandusky&quot;' function='range' level='[Customer Name]' to='&quot;George Bell&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Giulietta Baptist&quot;' />
          <groupfilter from='&quot;Giulietta Weimer&quot;' function='range' level='[Customer Name]' to='&quot;Greg Hansen&quot;' />
          <groupfilter from='&quot;Greg Tran&quot;' function='range' level='[Customer Name]' to='&quot;Harold Dahlen&quot;' />
          <groupfilter from='&quot;Harold Pawlan&quot;' function='range' level='[Customer Name]' to='&quot;Helen Wasserman&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Henry Goldwyn&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Henry MacAllister&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Hunter Glantz&quot;' />
          <groupfilter from='&quot;Irene Maddox&quot;' function='range' level='[Customer Name]' to='&quot;Jack Garza&quot;' />
          <groupfilter from='&quot;James Galang&quot;' function='range' level='[Customer Name]' to='&quot;Janet Lee&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Janet Molinari&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jas O&apos;Carroll&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jay Fein&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jay Kimmel&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jennifer Braxton&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jennifer Ferguson&quot;' />
          <groupfilter from='&quot;Jennifer Jackson&quot;' function='range' level='[Customer Name]' to='&quot;Jeremy Farry&quot;' />
          <groupfilter from='&quot;Jeremy Pistek&quot;' function='range' level='[Customer Name]' to='&quot;Jill Fjeld&quot;' />
          <groupfilter from='&quot;Jill Stevenson&quot;' function='range' level='[Customer Name]' to='&quot;Jim Kriz&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jim Radford&quot;' />
          <groupfilter from='&quot;Joe Elijah&quot;' function='range' level='[Customer Name]' to='&quot;Joni Wasserman&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Joseph Holt&quot;' />
          <groupfilter from='&quot;Julia Barnett&quot;' function='range' level='[Customer Name]' to='&quot;Justin Deggeller&quot;' />
          <groupfilter from='&quot;Justin Hirsh&quot;' function='range' level='[Customer Name]' to='&quot;Karen Daniels&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Karen Seio&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Karl Braun&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Katherine Ducich&quot;' />
          <groupfilter from='&quot;Katherine Murray&quot;' function='range' level='[Customer Name]' to='&quot;Kelly Collister&quot;' />
          <groupfilter from='&quot;Kelly Williams&quot;' function='range' level='[Customer Name]' to='&quot;Khloe Miller&quot;' />
          <groupfilter from='&quot;Kristen Hastings&quot;' function='range' level='[Customer Name]' to='&quot;Kunst Miller&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Larry Tron&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Laura Armstrong&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Laurel Elliston&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Lauren Leatherbury&quot;' />
          <groupfilter from='&quot;Lena Cacioppo&quot;' function='range' level='[Customer Name]' to='&quot;Lena Radford&quot;' />
          <groupfilter from='&quot;Linda Southworth&quot;' function='range' level='[Customer Name]' to='&quot;Lindsay Shagiari&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Lisa Hazard&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Lisa Ryan&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Liz MacKendrick&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Liz Thompson&quot;' />
          <groupfilter from='&quot;Logan Currie&quot;' function='range' level='[Customer Name]' to='&quot;Luke Foster&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Lycoris Saunders&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Lynn Smith&quot;' />
          <groupfilter from='&quot;Marc Crier&quot;' function='range' level='[Customer Name]' to='&quot;Marina Lichtenstein&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Mark Cousins&quot;' />
          <groupfilter from='&quot;Mark Hamilton&quot;' function='range' level='[Customer Name]' to='&quot;Mark Van Huff&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Mary Zewe&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;MaryBeth Skach&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Matt Abelman&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Matt Collins&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Matt Connell&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Matt Hagelstein&quot;' />
          <groupfilter from='&quot;Maureen Gastineau&quot;' function='range' level='[Customer Name]' to='&quot;Max Jones&quot;' />
          <groupfilter from='&quot;Maxwell Schwartz&quot;' function='range' level='[Customer Name]' to='&quot;Melanie Seite&quot;' />
          <groupfilter from='&quot;Michael Grace&quot;' function='range' level='[Customer Name]' to='&quot;Michael Moore&quot;' />
          <groupfilter from='&quot;Michael Oakman&quot;' function='range' level='[Customer Name]' to='&quot;Michelle Huthwaite&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Michelle Moray&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Michelle Tran&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Mick Crebagga&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Mike Caudle&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Mike Gockenbach&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Mike Pelletier&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Mike Vittorini&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Mitch Webber&quot;' />
          <groupfilter from='&quot;Monica Federle&quot;' function='range' level='[Customer Name]' to='&quot;Muhammed MacIntyre&quot;' />
          <groupfilter from='&quot;Nancy Lomonaco&quot;' function='range' level='[Customer Name]' to='&quot;Neil Knudson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Neoma Murray&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Nick Zandusky&quot;' />
          <groupfilter from='&quot;Nicole Fjeld&quot;' function='range' level='[Customer Name]' to='&quot;Nora Pelletier&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Odella Nelson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Olvera Toch&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Pamela Stobb&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Parhena Norris&quot;' />
          <groupfilter from='&quot;Patrick Bzostek&quot;' function='range' level='[Customer Name]' to='&quot;Patrick O&apos;Brill&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Patrick Ryan&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Paul Gonzalez&quot;' />
          <groupfilter from='&quot;Paul MacIntyre&quot;' function='range' level='[Customer Name]' to='&quot;Paul Stevenson&quot;' />
          <groupfilter from='&quot;Pauline Chand&quot;' function='range' level='[Customer Name]' to='&quot;Pete Armstrong&quot;' />
          <groupfilter from='&quot;Peter Fuller&quot;' function='range' level='[Customer Name]' to='&quot;Phillina Ober&quot;' />
          <groupfilter from='&quot;Pierre Wener&quot;' function='range' level='[Customer Name]' to='&quot;Ralph Kennedy&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Randy Ferguson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Raymond Messe&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Resi Pölking&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Richard Bierner&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Richard Eichhorn&quot;' />
          <groupfilter from='&quot;Rick Duston&quot;' function='range' level='[Customer Name]' to='&quot;Ritsa Hightower&quot;' />
          <groupfilter from='&quot;Rob Dowd&quot;' function='range' level='[Customer Name]' to='&quot;Rob Lucas&quot;' />
          <groupfilter from='&quot;Robert Barroso&quot;' function='range' level='[Customer Name]' to='&quot;Robert Marley&quot;' />
          <groupfilter from='&quot;Roger Barcio&quot;' function='range' level='[Customer Name]' to='&quot;Roland Fjeld&quot;' />
          <groupfilter from='&quot;Roland Schwarz&quot;' function='range' level='[Customer Name]' to='&quot;Ross Baird&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Roy Französisch&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Roy Phan&quot;' />
          <groupfilter from='&quot;Ruben Ausman&quot;' function='range' level='[Customer Name]' to='&quot;Ryan Akin&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Sally Hughsby&quot;' />
          <groupfilter from='&quot;Sam Craven&quot;' function='range' level='[Customer Name]' to='&quot;Sara Luxemburg&quot;' />
          <groupfilter from='&quot;Sarah Brown&quot;' function='range' level='[Customer Name]' to='&quot;Sarah Jordon&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Scot Wooten&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Scott Cohen&quot;' />
          <groupfilter from='&quot;Sean Braxton&quot;' function='range' level='[Customer Name]' to='&quot;Sean O&apos;Donnell&quot;' />
          <groupfilter from='&quot;Seth Vernon&quot;' function='range' level='[Customer Name]' to='&quot;Shahid Shariari&quot;' />
          <groupfilter from='&quot;Shaun Chance&quot;' function='range' level='[Customer Name]' to='&quot;Shirley Daniels&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Shirley Schmidt&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Shui Tom&quot;' />
          <groupfilter from='&quot;Skye Norling&quot;' function='range' level='[Customer Name]' to='&quot;Steven Roelle&quot;' />
          <groupfilter from='&quot;Stewart Carmichael&quot;' function='range' level='[Customer Name]' to='&quot;Sue Ann Reed&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Sung Pak&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Sung Shariari&quot;' />
          <groupfilter from='&quot;Suzanne McNair&quot;' function='range' level='[Customer Name]' to='&quot;Tanja Norvell&quot;' />
          <groupfilter from='&quot;Ted Trevino&quot;' function='range' level='[Customer Name]' to='&quot;Thea Hendricks&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Theone Pippenger&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Theresa Swint&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Thomas Brumley&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Thomas Thornton&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Tim Brockman&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Tim Taslimi&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Toby Gnade&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Toby Swindell&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Todd Sumrall&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Tom Prescott&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Tonja Turnell&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Tony Chapman&quot;' />
          <groupfilter from='&quot;Tracy Blumstein&quot;' function='range' level='[Customer Name]' to='&quot;Tracy Zic&quot;' />
          <groupfilter from='&quot;Trudy Brown&quot;' function='range' level='[Customer Name]' to='&quot;Valerie Takahito&quot;' />
          <groupfilter from='&quot;Victor Preis&quot;' function='range' level='[Customer Name]' to='&quot;Victoria Wilson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Vivek Sundaresam&quot;' />
          <groupfilter from='&quot;William Brown&quot;' function='range' level='[Customer Name]' to='&quot;Zuschuss Carroll&quot;' />
        </groupfilter>
      </group>
      <group caption='Customers 2016' name='[Set 3]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter from='&quot;Aaron Bergman&quot;' function='range' level='[Customer Name]' to='&quot;Aimee Bixby&quot;' />
          <groupfilter from='&quot;Alan Haines&quot;' function='range' level='[Customer Name]' to='&quot;Alex Grayson&quot;' />
          <groupfilter from='&quot;Alice McCarthy&quot;' function='range' level='[Customer Name]' to='&quot;Allen Goldenen&quot;' />
          <groupfilter from='&quot;Alyssa Crouse&quot;' function='range' level='[Customer Name]' to='&quot;Andrew Roberts&quot;' />
          <groupfilter from='&quot;Andy Reiter&quot;' function='range' level='[Customer Name]' to='&quot;Angele Hood&quot;' />
          <groupfilter from='&quot;Ann Steele&quot;' function='range' level='[Customer Name]' to='&quot;Annie Zypern&quot;' />
          <groupfilter from='&quot;Anthony Jacobs&quot;' function='range' level='[Customer Name]' to='&quot;Anthony Rawles&quot;' />
          <groupfilter from='&quot;Arianne Irving&quot;' function='range' level='[Customer Name]' to='&quot;Ashley Jarboe&quot;' />
          <groupfilter from='&quot;Barbara Fisher&quot;' function='range' level='[Customer Name]' to='&quot;Barry Pond&quot;' />
          <groupfilter from='&quot;Bart Pistole&quot;' function='range' level='[Customer Name]' to='&quot;Berenike Kampe&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Beth Paige&quot;' />
          <groupfilter from='&quot;Bill Donatelli&quot;' function='range' level='[Customer Name]' to='&quot;Bill Shonely&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bill Tyler&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bobby Elias&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bobby Trafton&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Brad Eason&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Brad Thomas&quot;' />
          <groupfilter from='&quot;Bradley Nguyen&quot;' function='range' level='[Customer Name]' to='&quot;Brenda Bowman&quot;' />
          <groupfilter from='&quot;Brendan Murry&quot;' function='range' level='[Customer Name]' to='&quot;Brian DeCherney&quot;' />
          <groupfilter from='&quot;Brian Moss&quot;' function='range' level='[Customer Name]' to='&quot;Bryan Mills&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Candace McMahon&quot;' />
          <groupfilter from='&quot;Carl Jackson&quot;' function='range' level='[Customer Name]' to='&quot;Chad Cunningham&quot;' />
          <groupfilter from='&quot;Chad Sievert&quot;' function='range' level='[Customer Name]' to='&quot;Charles Sheldon&quot;' />
          <groupfilter from='&quot;Chloris Kastensmidt&quot;' function='range' level='[Customer Name]' to='&quot;Christina Anderson&quot;' />
          <groupfilter from='&quot;Christina VanderZanden&quot;' function='range' level='[Customer Name]' to='&quot;Christopher Conant&quot;' />
          <groupfilter from='&quot;Christopher Schild&quot;' function='range' level='[Customer Name]' to='&quot;Chuck Magee&quot;' />
          <groupfilter from='&quot;Cindy Chapman&quot;' function='range' level='[Customer Name]' to='&quot;Claudia Bergmann&quot;' />
          <groupfilter from='&quot;Clay Ludtke&quot;' function='range' level='[Customer Name]' to='&quot;Craig Carreira&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Craig Leslie&quot;' />
          <groupfilter from='&quot;Craig Reiter&quot;' function='range' level='[Customer Name]' to='&quot;Cynthia Voltz&quot;' />
          <groupfilter from='&quot;Damala Kotsonis&quot;' function='range' level='[Customer Name]' to='&quot;Dan Reichenbach&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Daniel Byrd&quot;' />
          <groupfilter from='&quot;Daniel Raglin&quot;' function='range' level='[Customer Name]' to='&quot;Darren Budd&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Darren Powers&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Darrin Martin&quot;' />
          <groupfilter from='&quot;Darrin Van Huff&quot;' function='range' level='[Customer Name]' to='&quot;Dave Poirier&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;David Flashing&quot;' />
          <groupfilter from='&quot;David Smith&quot;' function='range' level='[Customer Name]' to='&quot;Dennis Pardue&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Denny Joy&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Denny Ordway&quot;' />
          <groupfilter from='&quot;Dianna Vittorini&quot;' function='range' level='[Customer Name]' to='&quot;Don Weiss&quot;' />
          <groupfilter from='&quot;Dorothy Dickinson&quot;' function='range' level='[Customer Name]' to='&quot;Doug Jacobs&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Duane Benoit&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Duane Noonan&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ed Braxton&quot;' />
          <groupfilter from='&quot;Ed Ludwig&quot;' function='range' level='[Customer Name]' to='&quot;Edward Nazzal&quot;' />
          <groupfilter from='&quot;Eleni McCrary&quot;' function='range' level='[Customer Name]' to='&quot;Eric Hoffmann&quot;' />
          <groupfilter from='&quot;Erica Bern&quot;' function='range' level='[Customer Name]' to='&quot;Evan Henry&quot;' />
          <groupfilter from='&quot;Filia McAdams&quot;' function='range' level='[Customer Name]' to='&quot;Frank Carlisle&quot;' />
          <groupfilter from='&quot;Frank Hawley&quot;' function='range' level='[Customer Name]' to='&quot;Fred Chung&quot;' />
          <groupfilter from='&quot;Fred Hopkins&quot;' function='range' level='[Customer Name]' to='&quot;Gary Hansen&quot;' />
          <groupfilter from='&quot;Gary McGarr&quot;' function='range' level='[Customer Name]' to='&quot;George Bell&quot;' />
          <groupfilter from='&quot;Giulietta Baptist&quot;' function='range' level='[Customer Name]' to='&quot;Grace Kelly&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Greg Guthrie&quot;' />
          <groupfilter from='&quot;Greg Matthias&quot;' function='range' level='[Customer Name]' to='&quot;Greg Tran&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Guy Thornton&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Harold Engle&quot;' />
          <groupfilter from='&quot;Harry Marie&quot;' function='range' level='[Customer Name]' to='&quot;Herbert Flentye&quot;' />
          <groupfilter from='&quot;Hunter Glantz&quot;' function='range' level='[Customer Name]' to='&quot;Ivan Liston&quot;' />
          <groupfilter from='&quot;Jack Lebron&quot;' function='range' level='[Customer Name]' to='&quot;Jay Kimmel&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jennifer Braxton&quot;' />
          <groupfilter from='&quot;Jennifer Jackson&quot;' function='range' level='[Customer Name]' to='&quot;Jessica Myrick&quot;' />
          <groupfilter from='&quot;Jill Fjeld&quot;' function='range' level='[Customer Name]' to='&quot;Jim Epp&quot;' />
          <groupfilter from='&quot;Jim Mitchum&quot;' function='range' level='[Customer Name]' to='&quot;Jim Sink&quot;' />
          <groupfilter from='&quot;Joe Elijah&quot;' function='range' level='[Customer Name]' to='&quot;Joel Eaton&quot;' />
          <groupfilter from='&quot;John Castell&quot;' function='range' level='[Customer Name]' to='&quot;John Grady&quot;' />
          <groupfilter from='&quot;John Lee&quot;' function='range' level='[Customer Name]' to='&quot;Jonathan Howell&quot;' />
          <groupfilter from='&quot;Joni Sundaresam&quot;' function='range' level='[Customer Name]' to='&quot;Joy Bell-&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Joy Smith&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Julia Barnett&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Julia West&quot;' />
          <groupfilter from='&quot;Julie Kriz&quot;' function='range' level='[Customer Name]' to='&quot;Karen Ferguson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Karl Braun&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Katharine Harms&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Katherine Hughes&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Katherine Murray&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Katrina Edelman&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Katrina Willman&quot;' />
          <groupfilter from='&quot;Kean Takahito&quot;' function='range' level='[Customer Name]' to='&quot;Keith Dawkins&quot;' />
          <groupfilter from='&quot;Kelly Andreada&quot;' function='range' level='[Customer Name]' to='&quot;Kelly Lampkin&quot;' />
          <groupfilter from='&quot;Ken Black&quot;' function='range' level='[Customer Name]' to='&quot;Larry Blacks&quot;' />
          <groupfilter from='&quot;Laura Armstrong&quot;' function='range' level='[Customer Name]' to='&quot;Laurel Workman&quot;' />
          <groupfilter from='&quot;Lela Donovan&quot;' function='range' level='[Customer Name]' to='&quot;Logan Haushalter&quot;' />
          <groupfilter from='&quot;Luke Foster&quot;' function='range' level='[Customer Name]' to='&quot;Luke Weiss&quot;' />
          <groupfilter from='&quot;Lynn Smith&quot;' function='range' level='[Customer Name]' to='&quot;MaryBeth Skach&quot;' />
          <groupfilter from='&quot;Matt Abelman&quot;' function='range' level='[Customer Name]' to='&quot;Maureen Fritzler&quot;' />
          <groupfilter from='&quot;Maureen Gnade&quot;' function='range' level='[Customer Name]' to='&quot;Michael Chen&quot;' />
          <groupfilter from='&quot;Michael Grace&quot;' function='range' level='[Customer Name]' to='&quot;Michael Nguyen&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Michael Paige&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Michelle Arnett&quot;' />
          <groupfilter from='&quot;Michelle Tran&quot;' function='range' level='[Customer Name]' to='&quot;Mike Caudle&quot;' />
          <groupfilter from='&quot;Mike Kennedy&quot;' function='range' level='[Customer Name]' to='&quot;Mike Vittorini&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Mitch Webber&quot;' />
          <groupfilter from='&quot;Muhammed MacIntyre&quot;' function='range' level='[Customer Name]' to='&quot;Nancy Lomonaco&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Nat Carroll&quot;' />
          <groupfilter from='&quot;Natalie DeCherney&quot;' function='range' level='[Customer Name]' to='&quot;Nathan Cano&quot;' />
          <groupfilter from='&quot;Neil Französisch&quot;' function='range' level='[Customer Name]' to='&quot;Nick Zandusky&quot;' />
          <groupfilter from='&quot;Nicole Hansen&quot;' function='range' level='[Customer Name]' to='&quot;Parhena Norris&quot;' />
          <groupfilter from='&quot;Patrick Bzostek&quot;' function='range' level='[Customer Name]' to='&quot;Patrick O&apos;Donnell&quot;' />
          <groupfilter from='&quot;Paul Gonzalez&quot;' function='range' level='[Customer Name]' to='&quot;Paul Van Hugh&quot;' />
          <groupfilter from='&quot;Pauline Johnson&quot;' function='range' level='[Customer Name]' to='&quot;Peter Bühler&quot;' />
          <groupfilter from='&quot;Peter McVee&quot;' function='range' level='[Customer Name]' to='&quot;Philisse Overcash&quot;' />
          <groupfilter from='&quot;Phillip Breyer&quot;' function='range' level='[Customer Name]' to='&quot;Ralph Arnett&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ralph Ritter&quot;' />
          <groupfilter from='&quot;Randy Ferguson&quot;' function='range' level='[Customer Name]' to='&quot;Resi Pölking&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ricardo Sperren&quot;' />
          <groupfilter from='&quot;Richard Eichhorn&quot;' function='range' level='[Customer Name]' to='&quot;Rick Duston&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Rick Huthwaite&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Rick Reed&quot;' />
          <groupfilter from='&quot;Ritsa Hightower&quot;' function='range' level='[Customer Name]' to='&quot;Robert Dilbeck&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Robert Waldorf&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Roger Demir&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Roland Fjeld&quot;' />
          <groupfilter from='&quot;Rose O&apos;Brian&quot;' function='range' level='[Customer Name]' to='&quot;Russell Applegate&quot;' />
          <groupfilter from='&quot;Ryan Crowe&quot;' function='range' level='[Customer Name]' to='&quot;Sally Matthias&quot;' />
          <groupfilter from='&quot;Sam Zeldin&quot;' function='range' level='[Customer Name]' to='&quot;Sandra Flanagan&quot;' />
          <groupfilter from='&quot;Sanjit Chand&quot;' function='range' level='[Customer Name]' to='&quot;Sara Luxemburg&quot;' />
          <groupfilter from='&quot;Sarah Foster&quot;' function='range' level='[Customer Name]' to='&quot;Scot Wooten&quot;' />
          <groupfilter from='&quot;Scott Williamson&quot;' function='range' level='[Customer Name]' to='&quot;Sean Christensen&quot;' />
          <groupfilter from='&quot;Sean Wendt&quot;' function='range' level='[Customer Name]' to='&quot;Shahid Hopkins&quot;' />
          <groupfilter from='&quot;Shaun Weien&quot;' function='range' level='[Customer Name]' to='&quot;Shirley Schmidt&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Sibella Parks&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Skye Norling&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Sonia Sunley&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Stefania Perrino&quot;' />
          <groupfilter from='&quot;Stephanie Phelps&quot;' function='range' level='[Customer Name]' to='&quot;Tamara Dahlen&quot;' />
          <groupfilter from='&quot;Tamara Willingham&quot;' function='range' level='[Customer Name]' to='&quot;Ted Trevino&quot;' />
          <groupfilter from='&quot;Thea Hendricks&quot;' function='range' level='[Customer Name]' to='&quot;Theone Pippenger&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Theresa Swint&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Thomas Boland&quot;' />
          <groupfilter from='&quot;Thomas Seio&quot;' function='range' level='[Customer Name]' to='&quot;Toby Ritter&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Todd Boyes&quot;' />
          <groupfilter from='&quot;Tom Ashbrook&quot;' function='range' level='[Customer Name]' to='&quot;Tony Chapman&quot;' />
          <groupfilter from='&quot;Tony Sayre&quot;' function='range' level='[Customer Name]' to='&quot;Tracy Collins&quot;' />
          <groupfilter from='&quot;Tracy Poddar&quot;' function='range' level='[Customer Name]' to='&quot;Trudy Brown&quot;' />
          <groupfilter from='&quot;Trudy Schmidt&quot;' function='range' level='[Customer Name]' to='&quot;Valerie Mitchum&quot;' />
          <groupfilter from='&quot;Victoria Brennan&quot;' function='range' level='[Customer Name]' to='&quot;Xylona Preis&quot;' />
          <groupfilter from='&quot;Yoseph Carroll&quot;' function='range' level='[Customer Name]' to='&quot;Zuschuss Donatelli&quot;' />
        </groupfilter>
      </group>
      <group caption='Customers 2017' name='[Set 4]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter from='&quot;Aaron Hawkins&quot;' function='range' level='[Customer Name]' to='&quot;Andrew Roberts&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Andy Reiter&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Andy Yotov&quot;' />
          <groupfilter from='&quot;Angele Hood&quot;' function='range' level='[Customer Name]' to='&quot;Anna Gayman&quot;' />
          <groupfilter from='&quot;Anne McFarland&quot;' function='range' level='[Customer Name]' to='&quot;Anthony Johnson&quot;' />
          <groupfilter from='&quot;Anthony Rawles&quot;' function='range' level='[Customer Name]' to='&quot;Art Ferguson&quot;' />
          <groupfilter from='&quot;Arthur Gainer&quot;' function='range' level='[Customer Name]' to='&quot;Bill Overfelt&quot;' />
          <groupfilter from='&quot;Bill Stewart&quot;' function='range' level='[Customer Name]' to='&quot;Bobby Odegard&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Brad Eason&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Brad Norvell&quot;' />
          <groupfilter from='&quot;Bradley Drucker&quot;' function='range' level='[Customer Name]' to='&quot;Brian Moss&quot;' />
          <groupfilter from='&quot;Brian Thompson&quot;' function='range' level='[Customer Name]' to='&quot;Cari Schnelling&quot;' />
          <groupfilter from='&quot;Carl Ludwig&quot;' function='range' level='[Customer Name]' to='&quot;Carlos Daly&quot;' />
          <groupfilter from='&quot;Carlos Soltero&quot;' function='range' level='[Customer Name]' to='&quot;Catherine Glotzbach&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Cathy Prescott&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Chad McGuire&quot;' />
          <groupfilter from='&quot;Charles Crestani&quot;' function='range' level='[Customer Name]' to='&quot;Chris Cortes&quot;' />
          <groupfilter from='&quot;Chris Selesnick&quot;' function='range' level='[Customer Name]' to='&quot;Chuck Clark&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Chuck Sachs&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Cindy Chapman&quot;' />
          <groupfilter from='&quot;Cindy Stewart&quot;' function='range' level='[Customer Name]' to='&quot;Corey Catlett&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Corinna Mitchell&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Craig Carreira&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Craig Leslie&quot;' />
          <groupfilter from='&quot;Craig Reiter&quot;' function='range' level='[Customer Name]' to='&quot;Cynthia Arntzen&quot;' />
          <groupfilter from='&quot;Cynthia Voltz&quot;' function='range' level='[Customer Name]' to='&quot;David Bremer&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;David Kendrick&quot;' />
          <groupfilter from='&quot;David Smith&quot;' function='range' level='[Customer Name]' to='&quot;Dean percer&quot;' />
          <groupfilter from='&quot;Deborah Brumfield&quot;' function='range' level='[Customer Name]' to='&quot;Denny Blanton&quot;' />
          <groupfilter from='&quot;Denny Ordway&quot;' function='range' level='[Customer Name]' to='&quot;Don Jones&quot;' />
          <groupfilter from='&quot;Don Weiss&quot;' function='range' level='[Customer Name]' to='&quot;Duane Benoit&quot;' />
          <groupfilter from='&quot;Duane Noonan&quot;' function='range' level='[Customer Name]' to='&quot;Ellis Ballard&quot;' />
          <groupfilter from='&quot;Emily Burns&quot;' function='range' level='[Customer Name]' to='&quot;Erica Bern&quot;' />
          <groupfilter from='&quot;Erica Hernandez&quot;' function='range' level='[Customer Name]' to='&quot;Gary Zandusky&quot;' />
          <groupfilter from='&quot;Gene McClure&quot;' function='range' level='[Customer Name]' to='&quot;George Zrebassa&quot;' />
          <groupfilter from='&quot;Giulietta Baptist&quot;' function='range' level='[Customer Name]' to='&quot;Guy Armstrong&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Guy Thornton&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Hallie Redmond&quot;' />
          <groupfilter from='&quot;Harold Engle&quot;' function='range' level='[Customer Name]' to='&quot;Hunter Lopez&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ivan Gibson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ivan Liston&quot;' />
          <groupfilter from='&quot;Jack Lebron&quot;' function='range' level='[Customer Name]' to='&quot;Jennifer Halladay&quot;' />
          <groupfilter from='&quot;Jennifer Patt&quot;' function='range' level='[Customer Name]' to='&quot;Jim Mitchum&quot;' />
          <groupfilter from='&quot;Jim Sink&quot;' function='range' level='[Customer Name]' to='&quot;Joel Eaton&quot;' />
          <groupfilter from='&quot;John Castell&quot;' function='range' level='[Customer Name]' to='&quot;John Lee&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;John Murray&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jonathan Howell&quot;' />
          <groupfilter from='&quot;Joni Wasserman&quot;' function='range' level='[Customer Name]' to='&quot;Julia Dunbar&quot;' />
          <groupfilter from='&quot;Juliana Krohn&quot;' function='range' level='[Customer Name]' to='&quot;Justin Ellison&quot;' />
          <groupfilter from='&quot;Justin MacKendrick&quot;' function='range' level='[Customer Name]' to='&quot;Karen Bern&quot;' />
          <groupfilter from='&quot;Karen Ferguson&quot;' function='range' level='[Customer Name]' to='&quot;Kean Nguyen&quot;' />
          <groupfilter from='&quot;Kean Thornton&quot;' function='range' level='[Customer Name]' to='&quot;Kelly Lampkin&quot;' />
          <groupfilter from='&quot;Ken Black&quot;' function='range' level='[Customer Name]' to='&quot;Lauren Leatherbury&quot;' />
          <groupfilter from='&quot;Lena Cacioppo&quot;' function='range' level='[Customer Name]' to='&quot;Linda Southworth&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Lindsay Shagiari&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Lindsay Williams&quot;' />
          <groupfilter from='&quot;Lisa Hazard&quot;' function='range' level='[Customer Name]' to='&quot;Liz Carlisle&quot;' />
          <groupfilter from='&quot;Liz Pelletier&quot;' function='range' level='[Customer Name]' to='&quot;Logan Currie&quot;' />
          <groupfilter from='&quot;Lori Olson&quot;' function='range' level='[Customer Name]' to='&quot;Luke Weiss&quot;' />
          <groupfilter from='&quot;Lynn Smith&quot;' function='range' level='[Customer Name]' to='&quot;Maris LaWare&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Mark Hamilton&quot;' />
          <groupfilter from='&quot;Mark Van Huff&quot;' function='range' level='[Customer Name]' to='&quot;Mary Zewe&quot;' />
          <groupfilter from='&quot;Mathew Reese&quot;' function='range' level='[Customer Name]' to='&quot;Matthew Grinstein&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Maureen Gastineau&quot;' />
          <groupfilter from='&quot;Max Engle&quot;' function='range' level='[Customer Name]' to='&quot;Meg Tillman&quot;' />
          <groupfilter from='&quot;Michael Chen&quot;' function='range' level='[Customer Name]' to='&quot;Mick Hernandez&quot;' />
          <groupfilter from='&quot;Mike Gockenbach&quot;' function='range' level='[Customer Name]' to='&quot;Neil Ducich&quot;' />
          <groupfilter from='&quot;Neil Knudson&quot;' function='range' level='[Customer Name]' to='&quot;Nick Zandusky&quot;' />
          <groupfilter from='&quot;Nicole Fjeld&quot;' function='range' level='[Customer Name]' to='&quot;Nora Paige&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Nora Preis&quot;' />
          <groupfilter from='&quot;Olvera Toch&quot;' function='range' level='[Customer Name]' to='&quot;Paul Gonzalez&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Paul Lucas&quot;' />
          <groupfilter from='&quot;Paul Prost&quot;' function='range' level='[Customer Name]' to='&quot;Paul Van Hugh&quot;' />
          <groupfilter from='&quot;Pauline Johnson&quot;' function='range' level='[Customer Name]' to='&quot;Peter Bühler&quot;' />
          <groupfilter from='&quot;Peter McVee&quot;' function='range' level='[Customer Name]' to='&quot;Phillina Ober&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Phillip Flathmann&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Quincy Jones&quot;' />
          <groupfilter from='&quot;Ralph Arnett&quot;' function='range' level='[Customer Name]' to='&quot;Randy Bradley&quot;' />
          <groupfilter from='&quot;Raymond Buch&quot;' function='range' level='[Customer Name]' to='&quot;Resi Pölking&quot;' />
          <groupfilter from='&quot;Ricardo Sperren&quot;' function='range' level='[Customer Name]' to='&quot;Rick Hansen&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Rick Reed&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Rick Wilson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Rob Beeghly&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Rob Dowd&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Rob Lucas&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Rob Williams&quot;' />
          <groupfilter from='&quot;Robert Dilbeck&quot;' function='range' level='[Customer Name]' to='&quot;Ross DeVincentis&quot;' />
          <groupfilter from='&quot;Roy Französisch&quot;' function='range' level='[Customer Name]' to='&quot;Sally Knutson&quot;' />
          <groupfilter from='&quot;Sam Zeldin&quot;' function='range' level='[Customer Name]' to='&quot;Shirley Jackson&quot;' />
          <groupfilter from='&quot;Shui Tom&quot;' function='range' level='[Customer Name]' to='&quot;Sonia Cooley&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Speros Goranitis&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Stefania Perrino&quot;' />
          <groupfilter from='&quot;Stephanie Ulpright&quot;' function='range' level='[Customer Name]' to='&quot;Steven Roelle&quot;' />
          <groupfilter from='&quot;Stewart Carmichael&quot;' function='range' level='[Customer Name]' to='&quot;Susan Gilcrest&quot;' />
          <groupfilter from='&quot;Susan Pistek&quot;' function='range' level='[Customer Name]' to='&quot;Sylvia Foulston&quot;' />
          <groupfilter from='&quot;Tamara Dahlen&quot;' function='range' level='[Customer Name]' to='&quot;Theresa Coyne&quot;' />
          <groupfilter from='&quot;Thomas Boland&quot;' function='range' level='[Customer Name]' to='&quot;Tim Brockman&quot;' />
          <groupfilter from='&quot;Toby Carlisle&quot;' function='range' level='[Customer Name]' to='&quot;Trudy Schmidt&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Valerie Mitchum&quot;' />
          <groupfilter from='&quot;Vicky Freymann&quot;' function='range' level='[Customer Name]' to='&quot;Zuschuss Donatelli&quot;' />
        </groupfilter>
      </group>
      <group caption='Customers 2014 &amp; 2015' delimiter=',' name='[Set 5]' name-style='unqualified'>
        <groupfilter function='intersection'>
          <groupfilter field='[Set 1]' function='reference' />
          <groupfilter field='[Set 2]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Customers 2015 &amp; 2016' delimiter=',' name='[Set 6]' name-style='unqualified'>
        <groupfilter function='intersection'>
          <groupfilter field='[Set 2]' function='reference' />
          <groupfilter field='[Set 3]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Customers 2014, 2015 &amp; 2017' delimiter=',' name='[Set 7]' name-style='unqualified'>
        <groupfilter function='intersection'>
          <groupfilter field='[Set 4]' function='reference' />
          <groupfilter field='[Set 5]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Customers 2015, 2016 &amp; 2017' delimiter=',' name='[Set 8]' name-style='unqualified'>
        <groupfilter function='intersection'>
          <groupfilter field='[Set 4]' function='reference' />
          <groupfilter field='[Set 6]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Customers in 2 consecutive years + current year 2017' delimiter=',' name='[Set 9]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Set 7]' function='reference' />
          <groupfilter field='[Set 8]' function='reference' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/User/Documents/My Tableau Repository/Datasources/Sample - Superstore.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/21/2019 09:14:53 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sample - Superstore' increment-value='%null%' refresh-type='create' rows-inserted='9994' timestamp-start='2019-09-21 09:14:53.273' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Profit Ratio</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit Ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit Ratio</remote-alias>
              <ordinal>0</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>159</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>1</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>2</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>520</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>3</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>4</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1121</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>5</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>6</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>7</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1373</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>8</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3352</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>9</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>670</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Manufacturer</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Manufacturer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Manufacturer</remote-alias>
              <ordinal>10</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>243</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>11</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2065</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>12</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>545</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>13</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>14</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>15</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>866</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>16</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>17</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1582</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>18</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>19</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>56</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>20</ordinal>
              <family>Sample - Superstore.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.398773' group-percentage='0.138037' measure-ordering='alphabetic' measure-percentage='0.46319' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Graph 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ                                          </run>
            <run bold='true'>Sales per Segment per Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0lmqmfn1fbhv4h1gifrmf0ouph26' />
          </datasources>
          <datasource-dependencies datasource='federated.0lmqmfn1fbhv4h1gifrmf0ouph26'>
            <column caption='Sales Per Segment' datatype='integer' name='[Calculation_1347702224487878657]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Segment] : SUM([Sales]) }' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1347702224487878657]' derivation='Avg' name='[avg:Calculation_1347702224487878657:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[avg:Calculation_1347702224487878657:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[avg:Calculation_1347702224487878657:qk] + [federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk])</rows>
        <cols>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{6508BE39-0B88-4BEA-9BB7-59AB7725DFB1}' />
    </worksheet>
    <worksheet name='Graphs 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                Sales Vs Profit by Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0lmqmfn1fbhv4h1gifrmf0ouph26' />
          </datasources>
          <datasource-dependencies datasource='federated.0lmqmfn1fbhv4h1gifrmf0ouph26'>
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk]' />
              <text column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk]' />
              <text column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Profit:qk]</rows>
        <cols>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{C10E6588-2EAC-4D2D-B80F-7988B8D75336}' />
    </worksheet>
    <worksheet name='Graphs 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>                                Sales by Market (Region/ Segment/ Category)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0lmqmfn1fbhv4h1gifrmf0ouph26' />
          </datasources>
          <datasource-dependencies datasource='federated.0lmqmfn1fbhv4h1gifrmf0ouph26'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Region:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk]</rows>
        <cols>([federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Region:nk] / ([federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Segment:nk] / [federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]))</cols>
      </table>
      <simple-id uuid='{9C573C37-05E6-46DE-BF27-889E919D2618}' />
    </worksheet>
    <worksheet name='Graphs 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>        Sales figures by geography</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0lmqmfn1fbhv4h1gifrmf0ouph26' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0lmqmfn1fbhv4h1gifrmf0ouph26'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Longitude (generated)]' field-type='quantitative' max='-44549006.631793141' min='-57931836.804087691' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Latitude (generated)]' field-type='quantitative' max='8138330.0663279993' min='415562.50736121926' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#dc5f0c</color>
                <color>#db6a1e</color>
                <color>#db7531</color>
                <color>#db8044</color>
                <color>#da8b57</color>
                <color>#da9669</color>
                <color>#daa17c</color>
                <color>#daad8f</color>
                <color>#d9b8a1</color>
                <color>#d9c3b4</color>
                <color>#d9cec6</color>
                <color>#d9d9d9</color>
                <color>#9dcbe4</color>
                <color>#8ec2df</color>
                <color>#80b6d9</color>
                <color>#73a8d0</color>
                <color>#669bc7</color>
                <color>#5c91bf</color>
                <color>#5385b2</color>
                <color>#487aa9</color>
                <color>#3b6ea0</color>
                <color>#306495</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk]' />
              <lod column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Country:nk]' />
              <lod column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:State:nk]' />
              <color column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk]' />
              <geometry column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Latitude (generated)]</rows>
        <cols>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{82DB648B-95F1-44F6-9644-6509122FBC54}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{ED292790-8224-40D5-8762-A3949C2785CE}' />
    </worksheet>
    <worksheet name='Solution 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'> Products with maximum Loss</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0lmqmfn1fbhv4h1gifrmf0ouph26' />
          </datasources>
          <datasource-dependencies datasource='federated.0lmqmfn1fbhv4h1gifrmf0ouph26'>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Product Name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;\&quot;While you Were Out\&quot; Message Book, One Form per Page&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Zipper Ring Binder Pockets&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Profit:qk]' value='35' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Product Name:nk]' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Profit:qk]' />
              <text column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk] / [federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Product Name:nk])</rows>
        <cols>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{FD20EC3A-554A-4778-AEBA-67E8DEC4E464}' />
    </worksheet>
    <worksheet name='Solution 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>     Products with max Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0lmqmfn1fbhv4h1gifrmf0ouph26' />
          </datasources>
          <datasource-dependencies datasource='federated.0lmqmfn1fbhv4h1gifrmf0ouph26'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Product Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Product Name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Profit:qk]' value='15' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Product Name:nk]' value='24' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Product Name:nk]' value='10' />
            <format attr='width' field='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]' value='48' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk]' />
              <text column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk] / ([federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk] / [federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Product Name:nk]))</rows>
        <cols>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{72C40149-FC58-48D0-9AFC-8EB8DE9431D2}' />
    </worksheet>
    <worksheet name='Solution 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>             No of customers with purchases in consecutive 2 yrs. and also in current year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0lmqmfn1fbhv4h1gifrmf0ouph26' />
          </datasources>
          <datasource-dependencies datasource='federated.0lmqmfn1fbhv4h1gifrmf0ouph26'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 9]' />
          <slices>
            <column>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 9]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[ctd:Customer Name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[ctd:Customer Name:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{A296D33F-7858-4750-A139-AB67C9AEFC81}' />
    </worksheet>
    <worksheet name='Solution 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>      No of customers who have purchased earlier but no transaction in recent year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0lmqmfn1fbhv4h1gifrmf0ouph26' />
          </datasources>
          <datasource-dependencies datasource='federated.0lmqmfn1fbhv4h1gifrmf0ouph26'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 11]' />
          <slices>
            <column>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 11]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[ctd:Customer Name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[ctd:Customer Name:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{B0A487A3-9A8A-4AA9-BD54-95CB60131256}' />
    </worksheet>
    <worksheet name='Solution 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ       </run>
            <run bold='true'>                                            Trends by Product</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0lmqmfn1fbhv4h1gifrmf0ouph26' />
          </datasources>
          <datasource-dependencies datasource='federated.0lmqmfn1fbhv4h1gifrmf0ouph26'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk]' value='52' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[qr:Order Date:ok]' value='36' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk]' />
              <text column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk] * [federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk])</rows>
        <cols>([federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[yr:Order Date:ok] / [federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[qr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{EEDE8197-CE74-4AB7-929E-972CDEAB7329}' />
    </worksheet>
    <worksheet name='Solution 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>            Sales by Category and Forecast for next quarter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.0lmqmfn1fbhv4h1gifrmf0ouph26' />
          </datasources>
          <datasource-dependencies datasource='federated.0lmqmfn1fbhv4h1gifrmf0ouph26'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-prediction-interval-lower' name='[fPIL:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-prediction-interval-upper' name='[fPIU:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk] * [federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fVal:sum:Sales:qk])</rows>
        <cols>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[tqr:Order Date:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[tqr:Order Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]</field>
                    <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fVal:sum:Sales:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[tqr:Order Date:qk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fPIL:sum:Sales:qk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fPIU:sum:Sales:qk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fVal:sum:Sales:qk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Forecast Indicator:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Technology&quot;</value>
                <value>#2017-10-01 00:00:00#</value>
                <value>68442</value>
                <value>104541</value>
                <value>86491</value>
                <value>&quot;Estimate&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[tqr:Order Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]</field>
                    <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fVal:sum:Sales:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[tqr:Order Date:qk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fPIL:sum:Sales:qk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fPIU:sum:Sales:qk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fVal:sum:Sales:qk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Forecast Indicator:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Office Supplies&quot;</value>
                <value>#2017-10-01 00:00:00#</value>
                <value>52711</value>
                <value>89344</value>
                <value>71027</value>
                <value>&quot;Estimate&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[tqr:Order Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]</field>
                    <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fVal:sum:Sales:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[tqr:Order Date:qk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fPIL:sum:Sales:qk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fPIU:sum:Sales:qk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[fVal:sum:Sales:qk]</field>
                  <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Forecast Indicator:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Furniture&quot;</value>
                <value>#2017-10-01 00:00:00#</value>
                <value>64907</value>
                <value>105615</value>
                <value>85261</value>
                <value>&quot;Estimate&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Quarter-Trunc' range-size='1' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{60FBAC38-ECEC-47EC-9B0A-87297950CFDA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='56' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='53' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='50' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='47' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='44' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                    <zone h='98000' id='41' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                      <zone h='98000' id='38' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                        <zone h='98000' id='35' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                          <zone h='98000' id='30' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                            <zone h='98000' id='27' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                              <zone h='98000' id='24' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                                <zone h='98000' id='21' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                                  <zone h='98000' id='18' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                                    <zone h='98000' id='16' type='layout-basic' w='98400' x='800' y='1000'>
                                      <zone h='38000' id='28' name='Solution 6' w='65900' x='33300' y='61000'>
                                        <zone-style>
                                          <format attr='border-color' value='#000000' />
                                          <format attr='border-style' value='none' />
                                          <format attr='border-width' value='0' />
                                          <format attr='margin' value='4' />
                                        </zone-style>
                                      </zone>
                                      <zone h='60000' id='32' name='Solution 5' w='65900' x='33300' y='1000'>
                                        <zone-style>
                                          <format attr='border-color' value='#000000' />
                                          <format attr='border-style' value='none' />
                                          <format attr='border-width' value='0' />
                                          <format attr='margin' value='4' />
                                        </zone-style>
                                      </zone>
                                      <zone h='40500' id='45' name='Solution 2' w='32500' x='800' y='1000'>
                                        <zone-style>
                                          <format attr='border-color' value='#000000' />
                                          <format attr='border-style' value='none' />
                                          <format attr='border-width' value='0' />
                                          <format attr='margin' value='4' />
                                        </zone-style>
                                      </zone>
                                      <zone h='57500' id='51' name='Graphs 3' w='32500' x='800' y='41500'>
                                        <zone-style>
                                          <format attr='border-color' value='#000000' />
                                          <format attr='border-style' value='none' />
                                          <format attr='border-width' value='0' />
                                          <format attr='margin' value='4' />
                                        </zone-style>
                                      </zone>
                                    </zone>
                                  </zone>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='73' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='74' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='40500' id='45' is-fixed='true' name='Solution 2' w='32500' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60000' id='32' is-fixed='true' name='Solution 5' w='65900' x='33300' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57500' id='51' is-fixed='true' name='Graphs 3' w='32500' x='800' y='41500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38000' id='28' is-fixed='true' name='Solution 6' w='65900' x='33300' y='61000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3EA5D32D-D2D6-48AC-A833-09FBE5C0E635}' />
    </dashboard>
    <dashboard name='Questions'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='71907' id='1' type='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#0055ff' fontname='Calibri' fontsize='15'>Create a dashboard    </run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run bold='true' fontalignment='2' fontcolor='#0055ff' fontname='Calibri' fontsize='10'>*Consider 2017 as Current Year</run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#f28e2b' fontname='Calibri' fontsize='15'>Calculations:</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#222222' fontname='Times New Roman' fontsize='12'>1. Ability to identify which product needs to be discontinued due to maximum losses - specific Product Names within Product Sub-category</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#222222' fontname='Times New Roman' fontsize='12'>2. Identify which top 10 products are having the best profitability</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#222222' fontname='Times New Roman' fontsize='12'>3. How many customers have purchased in consecutive 2 yrs. and also ordered in current year</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#222222' fontname='Times New Roman' fontsize='12'>4. How many customers have purchased earlier but no transaction in recent year</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#222222' fontname='Times New Roman' fontsize='12'>5. Which product has a consistent or upward trending performance</run>
              <run>Æ&#10;</run>
              <run fontcolor='#222222' fontname='Times New Roman' fontsize='12'>- sales monthly, quarterly, yearly</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#222222' fontname='Times New Roman' fontsize='12'>6 Forecast sales for next quarter</run>
              <run>Æ&#10;&#10;&#10;</run>
              <run fontcolor='#222222' fontname='Times New Roman' fontsize='12'>Above all has to be drill down (dicing &amp; slicing) based on Dates / Regions / Product Category / Product Sub-category</run>
              <run fontcolor='#000000' fontname='Times New Roman' fontsize='12'>Æ </run>
              <run>Æ&#10;&#10;</run>
              <run bold='true' fontcolor='#f28e2b' fontname='Calibri' fontsize='12'>Graphs: </run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#000000' fontname='Times New Roman' fontsize='12'>1. Using Scatter plot explain me the list of products that are in more profitable list</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#000000' fontname='Times New Roman' fontsize='12'>2. Create a box &amp; whisker plot to explain the best market to pich in newly</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#000000' fontname='Times New Roman' fontsize='12'>3. Create a hierarchy on any of the dimensions &amp; explain the sales pattern</run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#000000' fontname='Times New Roman' fontsize='12'>4. Explain LOD on your choice based on the available data. </run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-top' value='0' />
              <format attr='margin-right' value='0' />
              <format attr='margin-left' value='0' />
            </zone-style>
          </zone>
          <zone h='26093' id='3' type='empty' w='98400' x='800' y='72907'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='margin-right' value='0' />
              <format attr='margin-bottom' value='0' />
              <format attr='margin-left' value='0' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
            <format attr='margin-top' value='8' />
            <format attr='margin-right' value='8' />
            <format attr='margin-bottom' value='8' />
            <format attr='margin-left' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{E6923E94-F24B-4327-BAE8-04AEB5BF73D1}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Solution 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Product Name:nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75CCC431-33AE-47D9-A686-D139CCACB085}' />
    </window>
    <window class='worksheet' name='Solution 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Product Name:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6422C420-F8F0-463E-A605-C9F9F315AB3A}' />
    </window>
    <window class='worksheet' name='Solution 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 5]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 6]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 7]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 9]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Customer Name:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66F915A3-D500-4656-BADC-3D5DFEF4AF20}' />
    </window>
    <window class='worksheet' name='Solution 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 10]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 11]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 5]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 6]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 7]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[Set 9]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Customer Name:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{468EF133-428E-4366-A91F-932858C6D54D}' />
    </window>
    <window class='worksheet' name='Solution 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Order ID:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F6AFC3F-61D8-4B3A-82D2-6213CAA6E86C}' />
    </window>
    <window class='worksheet' name='Solution 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02ACA54F-BB4B-4A7B-BEE5-6959DBB5757D}' />
    </window>
    <window class='worksheet' name='Graphs 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01983501-CC75-43BC-BC63-FFD91521744D}' />
    </window>
    <window class='worksheet' name='Graphs 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Country:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Region:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3650EDB-2C7E-4C87-B6B5-B4FFEE477AE6}' />
    </window>
    <window class='worksheet' name='Graphs 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B7AF4E97-1554-4BA7-8336-605CFCEA2D96}' />
    </window>
    <window class='worksheet' name='Graph 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Category:nk]</field>
            <field>[federated.0lmqmfn1fbhv4h1gifrmf0ouph26].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4804B51-69CD-48BC-BBA1-6E5E7761D7F3}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Graphs 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Solution 2' />
        <viewpoint name='Solution 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Solution 6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{78C4477F-AA83-49ED-9C87-58EEE9193212}' />
    </window>
    <window class='dashboard' maximized='true' name='Questions'>
      <viewpoints />
      <active id='1' />
      <simple-id uuid='{4F165EF7-EC1A-4E93-9EAB-125BE32E0A49}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5ACFC1AD-54BA-4395-A4E6-E4D7DC5DFB94}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Graph 4' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Graphs 1' width='192'>
      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
      m0CjYEQDAD/4xZvlt//RAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Graphs 2' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Graphs 3' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Questions' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd5Rc133g+W/lHLuqq6tzbqDRyAABMJOiRJqSrJFE2aPg7PXMHtvruJ7d
      9fqsbM+ZnZkzO2NZTiNZlmTTzAkCI3LOjc45VFd1VVfOObx6+wdIkCBBEqREgVS/z1/d7753
      361X73de973v/q5MFEURiWSdkt/qBkgkt5IUAJJ1TQoAybomBYBkXZMCYJ2pV2Ex+s7tkTik
      y1d/XgzefH0LH2DfjyMpAD4B/vwH8GdPwGT43feZWYKFxPvXVU7BXx9/5/aDZ2Dk9cD4b8/f
      fNv+yws3v+/HkUzqBv2Yq8DXvwP/+jswMgJ/fhzu7YCnL8Mvfx4mLsBMBe5rgLgVhABcCMIP
      /wS6VPC1vwazG77/a/A/n4O5JNTMYE7Ba374gz3wsg/ua4ZzEbCaIO4Diwk2bYSTo1CrwW89
      AH/xJHzlc/Diy/DrD8Ljl8CXgkt/casv0ocnPQE+7pRQycKrozAbhof3QSEDOzaCpQYjcchk
      YXMHtDvBl4R7N4AMWPVDVgHB158M3jhs6QC5AOdWoFaEpmbw+yBahG88BPU8yGSwqRVWQiBo
      wKaGI6PQ6ABvDJpbYG8LWO1gUt/Ca/MTID0BPgFyORjzw0Y3lGTg1MKlJdjaC8urIKpgYyNM
      hqDdDItJuK0bEOHyAljN0NcEhQIsxMGmhWIB8iJ02sCTgjYjqI0QT4JSBrEMbOkBbwAEFXRY
      YCoIDWaoVKHfDeNLoNJfbdcnlRQAknVN+hNIsq5JASBZ16QAkKxrUgBI1jUpACTrmhQAknVN
      CgDJuiYFgGRdkwJAsq69JQBEKle+S/nMt6kXSq9vK1E8+J9ucNj128VannomQnX8h9RLtY+0
      wRLJT5LyjR/EwjJCsoLuU7+LEB6mfPkIit6HAahOPkY9LyCTCygH9lILrl3dPvscQnABZXMf
      5fHDKEwG5K5FShcOIDP1IKsHqecyKPu/gLBwAEX3Z6lHRlDv/KVb82klkrd58wkg1yCW4ojV
      HIL/PPVMCGFtGoCabwz1lp+nnlxEzIURszEABP8l6tEroHahaLkTmV5Lbekwit6vUA9dpB4P
      od78KYTwPMjl1JMBlD333orPKZHc0HUvwwneI9TCqyjbtiCsTSB374ZiHJlWjhCNoXC3IQRn
      kTdug2IcxAz1dAzlhp+nNv088oYu5I1D1KafQ95yN5TCKNx9COk09cBZ5O0PIGZXUElBIPmY
      kN4GlaxrUi+QZF2TAkCyrkkBIFnXpACQrGvXBUAkErmuUKwWiKcLVItZ0vkyUCOVTJNMpUml
      Uu9b+Rv7xBM3zteRSqVAFJiZmedG/4nn0zGKVahXCqQLFQCSsTjC+5y3LlRIprLv2763S8Tf
      Pa+IKFSJJ9Pv2F4t5chkc6TShfet//2uWeIt1ynxLtfsg7iZ7wggmUz+2Od6+3nrtRIz01PX
      vjeAlYVpLl0Zp/aOL1skkYjfsK5iJsHcso9MIszCiv9DtQVEYvH4W35/k+Kb3/zmN9/45YUX
      nmfLli3XCqfGhjk7PEEDEQ6Ohulub6JSzHHy/CU63A5eO3SMSkWgXMxjtJp4Zf9+LDY74UQG
      u8VEsVhEJpT43qNPsW1jN95ggloxTTSZ4dSxYzS1dTB1/AATgTwOu5FUrkQlF8e/FqJQLHD8
      wFMk5E7cdj0ichZm57hw5iRygxGn3U4qHscXWEMh1okmk4RWveitDhYmT3Hm3DxWi46SAP7l
      BfyLM8RFAxZljSWPD4PZwvzsHGaDmmV/FHktz1MvvEZzox25Sk0+5uPMmBexmECpt0I1zOOP
      HaSrv5e1lQV0lgZU8joXDj2Lr2Kn2a5hNRBGq6jhCyWp5hJkyiKFVIR4OseJo8dp6WynlM8S
      DEVJJROk02kU9QrBRJ5SJsRLh86wbcsmQv4lXnrtKGaLjXQqTTEbp4waWSXDwRMX0VKmptSj
      U8vxryyTTGfIV+rEAh6y+SJrgTXypRoatZJYKHC1vFQiFkuQTqUo59NEEynS2SJWi4kXX3yZ
      jhYn3lASoZChJlMQ8K6i0yrw+KMU8xmUKjUqleravbG66kGs1lj2+rHYLMzMLmDSKvAEYui1
      al7Z/xxqSwOuxkYWZ2ewNzbiHx9GY1Fz9NISCgSq+QSFmpJM1Mtrh05gsllJJ7Pk0xHi8QiX
      xpfYMNDH4Wf/BV1rL4qSwOrqCnqdkpXVELl0Ap3JzNzMHFqlSKJQQ6+osbDkIRTPUMilUcoE
      Xjt6kqkrl7E43WjUSvLZFKFoCpvVcn036MGDr/KZzzx0LSpfeOYJlrwRfukLexhNGEjNncPU
      tg9ZYYlsWYVSVsOoVtLav4GNvT08v/8FlHIFtUqZn//yI7zw9NPoDAYqQhWVKCDTmQn7AjQ2
      O6iVqtRqVfqdFkyDm7l88gL3PvgwFjHKS8dGKZZKtFqgJDdQFWp4Q2UefOhOJs6cRKM2sPfn
      H+bQD79H/0ALzxxb4je+tINAtZnpg99n06cfITU1TsXVQnZsmA0P/SLJ6bMM/dxXyI4cwJPX
      sLAUpb3NTCpdwt5gR1ErU60JmFU1TO1DbLKXOHjFj9bWRi68zJe/dBfPPn0JWW6GpKqV2/bs
      QQzMIHcY8XiTlKoKUrkCrS49u7dv59y5i5RLObK5Kk1NdirlCtWqQCabpcnVSLlaQ69RUS6m
      0dlaqRSz1IUan//853jp5VepCzXqgoBGqyUR8dO5cTe37+5g/xNHkNvcVHJhvvDZT/PY869g
      1umQUUOvkZOuKViduMIjv/G/cv7McYpl8Vo5gEYjJxjKYLebEBH5N1/4Iq++eohqtYS8UkFj
      16GRqZlaCNHYaESlNaGtJHD27qbXbWAlnGVooJvnH/sOQlVOy7bdHNx/hF07+8gIKj59+y6O
      HTuByWpg0Kng2ESOPffvo93ZyNLZgyyUVbRrC6QtGymsLlGuJNBrHQhCkVpdRK+pI1dY2d5t
      5JRfyxfv3czS0jKXzh6it2eIyfHLVOQ6ujo7kClkzC7FaGsxodOYEJVqHrx3H6+99iqJeIa7
      9u3g3Og8KmpUK2X0FgOFXJFsNo2rsZnPfvbnrn8CrHmXMTtc5HNFSuk15JZONnfZiFZN1NJR
      Nm3ZRqmYRi5XodbqaXLYGOp1kVW5cJq1VEs5rBYLpgY3LU1O0vEQDmcToiDgcrdgMJlRKVSo
      lXKaXE6USjmoNagMLlTyGv3dHSg0ZoRaFZfLgcWopVxXoFSqaG9vJhGJotOqUWs1mCwOUmte
      qgY3g50Omns2EVyYYs/dD5KIrGFrbEVLhcb2XoqZGB3trdTlanRKGflyndY2N2qlmg1dbSh1
      JhqMCmqoaWlvwWC04nQ6yFUVyPJhBrfuxGKykI4H2LD7blS1Ip3dXbjdNpY9YXR6HWq1gY5m
      O26njUS+hlFVx93Rg0wmQyFX0tzoRKEEndGMXqfG5WpCqIs0NbdhsjaglVVR6Mx0tLWRiYdR
      6Mw02kyg1NLS6MTZ3IbNbCdXKqOTFekZ3IpFryKdzqJSq1GpdZiMRvTKOhu37sTrXUWnVmO1
      mF4v1+NutIFChd5oQq3SoFGp6OjpIeT10NzajNripKOxAblcjb3RTmdbMwq1kSanDb3Zhqux
      kUaHDQChVkFZreBLy/jiZ++kUBLoam4kniujrpdRKRXUVQac7iZS4RCNrmbSyTCtvVtwmtTI
      VGZ0ZGnr2YxcyKM2WHFYDMg1ZoxaEbW9GWWthsuuY3Y5wKfvu5NKtY5Ca8BstqLT65DJFXR2
      tqFSqOhsb0Wl0tDU6EBWLdPa3ozZ2UIimcblMIFMjVopR6/RYjRb0KmVuNu7f/yBMI/HQ1dX
      149TBcloEHQ2bEbtBzpuZWEaq7sHq1HzY51f8uGE/SvUNVbcTuutbsqHJo0ES9Y1qRtUsq5J
      ASBZ16QAkKxr1wJAFEqcO3mccLoIQDmX5OVDxwG4cuXKDQ9OpVLEwwHOXRq9Yfnly5cByKZS
      1K5tG37fRmUTQUZnlokFfVwcnXrPfaP+BXyRDz7oVa/kuDI+e8OydxtAutExieAyy4EPOGgl
      Vjl95DDe8JvHlTIRpha8V8+fiDA6PnPTA1mSD+/ajDChrmD3rj5Oj/tw7R1AY7QhF6rMT48x
      Oe/BbtIRT2fJFspYTHpGphbYMTTI5JVzON2teDxmjHY3/rkr1FGiszYwMTlLuSZg0WqwN9pY
      XAkTXl1CqMOe23by2A++x87b7yIYjqNTiVSrInvvvAOTvYng5dcIryqwq2Qka5tYuHyWSlVE
      roSmBjs+f4j+wQ0sjF3BX7Ew1NuMVm9m1eMhkwjTMbgJrdrIpv4uRi6dRabSEotn6GhzU6jK
      2Lqpn8lLJ1Eo5JQSXrSWJpCrUVZzlEXI5vI0NreT9M0iWtrZ0WfnqQPnkZUiKBQK1EIalbWF
      FmWep4+O86k7dxANeLG73NTrImdPnuKX/5df59KpY4gqE5RTOF2t+IMh2q0ylnNy9AEvh159
      he0b2jE12jj72kXE8h7qCg2RtVXEeoGx4Su4O3rp62jC3bkRneq9vk7JB3XtCaBUKfEFSty2
      tf31LSKCIDA9t4KyXubI8ePINCoSiRzBkB+TTkcwuEqDq5V92/s5PbKI06Kj3aFjeS3C8MQy
      NrOBdCpOJBjkwugUO7dvQaHSkYhdfeXCYG1gZHgETSnGyHwATTVFrHj13GJdRCmXka/V0cjB
      77taPr4cIe334O5v4/vf+j72tjaKCT9rwRCPP/kim/behlKuQV4rMDU7B0AkHGR22UMme/Up
      V63VABGTrZG1lUlCwTW8a3nWPFO0DvQSDq+QjAl45i/jD8Uw6o3ozDoMav3VY7xjHD92mVql
      gkwmo7mtg2PP/oClRJmgb4WZBS8NVhMyEQKhKKlEmEgyg2dhmp5GDSuJCq2d/QTDISwGFeFQ
      kNGJCeyuVnxeH6srCwiCwFoohLXBSptFxWK8Kt38H4FrT4BqMUskHkVnMVMoVDBpRBpbWmlz
      GCnL9egpki5U6e9TU5epsZs1xGIp1PIqK9EK+7ZvAKChexv3WzqRAfGwn4ooRxDqbHQ2srzi
      p7+7E5kSilXYs2sXBrOeQCSLdukFVK7P0aSHXCpOa3svg91NrEZz6OWQSayh2vQ5Hmgu0tzZ
      z9L8HP/hL/+YpYUlvvyVXyAeCrF33+34Fhe56/47KNeVWCw5APoGtyMTypTlepyGIbKCCqGc
      p6e/j3odTEY1Oq0ZraYPbV2ksbEbrVZFtazh4MQ5mnrTQBu37eggVaxRr8sYHJBjaHCgtbbT
      l5jioT/8v5mbGKetq4t4MotacTXP/pp3gc/94m9QTIbZsLGfqTkvWwdbiKWyVDt6sZt1VMoV
      tDotpVwKp7sFj9dPvS5DXq9gdTioFpJsMDbfivvjZ540DiBZ16ReIMm6JgWAZF2TAkCyrkkB
      IFnX3hwIq5U5f/w1PLGrM5tyyQhPPneA0RMvcmEm8BGcWqRQeP9ZVG9YmTjDzNoHH/B6w2uv
      vvKe5ScOH6YMFNIpKvUPfRoACoUCtVKW7A3SRIb8Hp4/8N5tuTGBw4ePXvutWkxx8vz7DyqW
      MmFOXRi/YVlidZrhmTWgRupDzKADPtB3+HF0rRtUptRQK6QolasAGG2NZGMeltPgMvdy8PBr
      KOp1qjIlCpkCd+dGxPAoK0nQqsHV3suF4ydpbHGhQI5aWaahpZ/2jm5SgQWCqRLZZAyNWo1e
      o8JhEjg+k6fboQG5SDpTQqNRYrDYWJsZQWt1IOiacJrqbN60DTVVTp46TH7DRobPnWfTBjeW
      5h7SQS/nxz38we/+Ji89/xSiyoxSLqBWaSlkoribO8hURXLZDC+98ip9bU5GFiO4bFrcFiMv
      HjrOztvvZnF5lduAycsj5GUlcoUa+z71efL+aRaCKRpNSpa9EWSKOkqlGqdFT1NLCy+/sJ/O
      wR3IZCLZYgGnTsOi38NQZws1tRWVzkQ5l+bC+fP82u/8AU2tXTT7ry75fvhHz+Do3sj09Azb
      eprwl4x85o5tAMyMXmDaF0NRKWJscKGTlYm9fpOePvwjqsZOylk/x14KYmrpILa6xPZ7HyYX
      mGNhYYl8Efq29RL2h8gn0/zt2UM4mtw09W9l5dJhHO0bMMjzlKxbyUVXGZlYIZnN0Nw2wM4B
      B0dPDaMWyyhNFmKxFAa7k0QwhM0gI5SpYdTIsVitTE3O8zu/95u88MxL9PR0sLYyTU5hR5sN
      om5wU9O5+Nw9O37Kt/XNu/YEEMo5tA43Yj5LLJ4ml4pQVVhwO6wszUySLdfR2dtIhiNEQmv0
      97jJxCNk0zFCkQgnjx4jnc4wvbBMMhqma8tOFhZ8OC06gmsBNFo91UIGn89PIRtleiWOtl7C
      F0pSKmaJROOsrQWZmBhBpWtgQ3sDZdRkA/NM+yJkMhlkQoEjrx0klc7RsWUbszMeFPU6d9y+
      BzmQz2UoVSqUc2m8vgC+cIx6NY9OoyUaCxMO+jl1YYR8IU06MM/Z0Xm27L2DxNoqSoVAOlsm
      FVtjbmGJbDLKSjBJOLiGTqNleWWFaqWMz7dCOOinkE9z/OQpTC0DmOQV5FotyloZ76oPmdpI
      tZCmZm5nZX4Wu0HBrtvvQKuQszB5iXi6SLkOd997B/PLIaq5OFZnK1dOHSMQjQIwNjFFIZfE
      H46yND/Nim+VYrEAiMytBAl5RvAH48xPTzI2OU1dqJIt1gj6vdSFKj6vH7VcIJopk4r6aeja
      QoOyhFqvQ2Nqwa6pUazJyGQzIJSYX5gnGs8wMzNDJZcgWZbTaNXg9aywMDeH2mQhW6oj1kV2
      b9tEIBJlecGDw25ChorN3Q2UNXZqooqtPY0EEynmZmauLj78MfaRjQP4vcuoDDZcr88g+ml4
      8onHeeTffhXFT+2MP57VlUW0ZidOu+VWN+XHNjN2hY5N29ErZbe6KR+INBAmWdekXiDJuiYF
      gGRdkwJAsq5JASBZ164LgNEjTzGxdnVGWC4Z4e+/90POHfhnjo76fuInFoUygWD0pvefP/8S
      F5Y+fAq/f330X96zfP9TT1F8l7JnnnvmhgNkY0efvXa9AMrpENFs9YZ11KsF1kI33/5AwP+u
      M8I+zEyxgP+DpxVcD64NhOWiPkbnfLQ7YtDchtHWiEpIE4yBXu/jxYNT5GMxKjUZolzG5j33
      U5o/zFJKiVYtw9nWy6vPvkDnxl4MChUWs4DC2svuHdtZnrhIWa7DszCLXqtDVs3S1trI8EoO
      h1GHWMuQygrodEp0Rj3RxUVcLS7CghNtycsDDz+C0WDg7NkXSfl6OPLyYR769Cbktn7yawvM
      +BL8we/+Jj/87t8h01qRi1W0GgO5VIiWti6URhtajZpHH3uMHreVS0sJzGTpau/i4tgEXQND
      pFJ5AE4d+hGXFpMMNWvwJSqU8jmauzo5e+goyjYrl05NYbCo+cLnv4xRb2B4+Cgn/nmczs2D
      +P1hem/7DJsNQV4+t4ROpUFns6IzWNnmqrL/ghchJ9DqhFRZRbmQptHdRGh2hi133M2R05e4
      Z3svOnsTZ0+coqm9DadJzWogSVlWwag28PWv/1uOHDlMoZBFgYZHfulrPPHDf2KgtZkTIxP0
      bdiC1Wol658mWTdSyiax222s+sP83h/8O773nX9my9BGludGUTZ0kpw5j66pB7lzgG88vPdW
      3Ye3zLXMcGqDhdYGPTpHC0KpSL2SwRvO09tipyiqEaoCQztup14tYjYa2bd7C/GQn6pchVyh
      JBaO0dHRRk2sYzcZ2Hr3Z4j6Vtk61E8qFqKuNGDRyShX62zYtIFMoYpJb0EUyrS2NFGtiahV
      SqqCSIvbTXdnM3Kjkw0tJjI1NSohR66mYM0XpKevnd33f5qwx0uby0ZjaydtzS7mpsdoau3G
      YdZSroJco2awt4NqXUk2HUWr0ZKvynA02NjQ2UQyV6W1pw+TUoZMLuJq7UbIZ2ju6KZYyGM2
      qNGYHZgVFaoiKHVmOju6EcpFduzajVJWIxTNsHnzRtKZPDabDburBZuqQjRXBVFEqVLS1dlJ
      m9tOMJrBam9ErQSTTolCpUYQBbrcbnzJAu2uBvRGPWa7C70KKuUyBqMRg9WBvFpCq1HS2j1A
      aGWeiiDHZNBid3eSCq/SNzCAwtCAy6hGrtGj06ro6e4mmcuhEBW0tbjo6Rug0wIpfQd6KvS0
      uyijpS4ItPcN0u765Ca4+rA+0oEwk8ONxaD7KKq/oSOHD3HvA5/+xAyE3Qqz09P0DQ5K1+h1
      0kCYZF2TeoEk65oUAJJ1TQoAybp2XQD4lueIJq+mEilmEkzOzHDp/DCxaJD5+fmf+HJF5Xya
      TPHG/eY366eRPe1mlitKJK6uvvJB5tIszM1QrUv/gt1Kby6QIdY4ffIsA0ObUSlkqNRqzp65
      gN/vpa+tidFLp4jWzFeXK5IpWZyd4ezpUyiMH3y5oujqLP6CjoLnHOdXirQ1mpiaXcSourrM
      jUmvZX56HJXBhkYlZ3ZqEpPVytT0HEatHI8viE4jJxjNoFHJScZj5NJhzo0sIqtkQa7A51sl
      G/cxtZqn3W1jbmoSrcHIwuIKDqcZz3KAdDpJOZ8mlskR9AeJRCIUCnkiaz5kKg3LK37qpeTV
      pYs29bF//0uYzBpyhRKr/hBymUAwFEErr/PDJ55l89AghUKBYDCEXg3DV8YwNzSRyyYJ+Ncw
      ahUs+6PUCkmWpi5ybjqORlZGazCysrBIpV4hFk2QTGep5lPEcxVKmRjxbIVSOkxBUBJYWcRo
      c6KUf7JeO/64ejMAZHJ6u5u5MjZPa4sLZHI883PoxDRLlQZ6jWUy2QxLHg/Dl2dpGxwgsRag
      mMziHOjj8NOPY9HX+N6zp9jeoycsODj6+Lcw9+2G2Cr+isDMwZcw9+8m55+hoX8PhtIaiUyW
      0Skvc6MT1I0KAoEovR0uLp47ykqggrXmIyJ3c+X0cfpa9fztdx7DbNIx488QXAuwOD9NMRGi
      XMoTy5aYml8hMHWeIkoWl1Zp6N6CJjbKquDgzAv/SFrbyabuFk4eP0YiE2VkeIZMKkGhkGd1
      ZYWWzhbmpy5z+cQZavZegt4FdGo5AxsGmZubZmp6lnopQySc4NzlYSrlIiurfswmPQuLC8xM
      jlPOl1gNBZhfCbJv11aeefIJ7IoC+8/PUysXGB8b456dAyTLNbI1A6NnXiCS1jAzNUImkyEU
      ClIu5RibGGduboViPk40kcVSD3F6MojOZMVp+3hPNPmkuBYAYiXHyMQiQ5s3kk7n0eu1OExK
      7L07MSCg1SqvLVfU2tFKKhxCq1aj0Ws/8HJFbe3tCMhRUSNfrqOSibhbmnA1udGqtTQ12ojG
      sjgbG+ns7WVpbpZNG7qZ8ybZNtSHKFdiMJtxmg0o6wLNnR0YbI2olXoaDHKc7mZkCjUNDgd6
      rZaurm6WZ8bYsGkrOqOJlkY75UKGulxHNuZnYOttdDXZaGlrBa2VSrGC2WKh0d2MXlZ6femi
      Vkq5HEqNlq2bNpCrKLCZ1Gg1Wmw2OzJkGAx6NFojBoOOXLFMW6Mdg6OVkG8Rja2NXYNtoDKi
      VyswmEyUMKAoROjbsAm1To9OrcKgVqHWqNAYTDQ02NFodSjkKhwWPRpHB/Jqma7uDvRa9S2+
      dX42/MTGAT6ZyxVVGR2dY9u2oZ94zYmwn7VUmaGBHpbnJnG0D2CWknt+7LxvL9D46WPEyu9f
      UWff4LWbv1DI8NqrhwE4euzYB2rQ27MMBOYuMvsBskF4xk/juZkGA6D6SG5+ALurlaGBHgC6
      B4akm/9j6oZPgJMnjtPZ4uC1wxfY1NuG0uXmxKuH2LX3Nrq7+3Bb5Bw4ePb1LA4NKKtZSoKM
      TDp9LVNAY4OOhuYu6rUyuWyGjT099G7ejkYBVy6cJpAoIa9X0KjVNNm1zK8mqJSKRONRdg5t
      5Oy4h55mIxvbbExGoKXRjt7awtb+ZlZnLuDPyinmiowMX+DuTz/IzPQCFk2V9gYdQcGKzaS/
      tr9E8m6uPQGqxQzD49MA5KMrHDp8knQ6w4I/wNKyj7133IlBUeH42cuI1K/L4rDi8VMqld6S
      KUBHNFFkZXEG37KHPZu7CZU1xEJX8wutrKyQz+auZYm4NDZHIZsgmS3R2eQkmytyx+17CIZj
      qJUyDK4ePPMLdLvUJHNl2jbuxjO/QJtDx5a9d+CdniCXL+APx1Arubb/kHTzS97HT+VdoMWZ
      MZwdm6Cax2K5mgFh/zNP89AXv4LmJt7KSkaDJIsi7U12SjWo5pMkiyLd7Te+wd/Y/93KJZI3
      SC/DSdY16VUIybomBYBkXZMCQLKuSQEgWdfeDACxxksvPIcvFCeXjPCtb/81p24i/fYbAv53
      plBPeUc5dHHpHdsvnj7OhSs3Ttn9dumQn3dJtHDNB80wIZG84VpWiOzqODFBz9j4NJ//zF0Y
      NGAwKHn+6acp1QTi8Rgtbgf+pECf20BzZy/nXnwKY/s2Sio9tdAsX/2N3+bca89i7dzE6GtP
      M7DnU6SSAf7Lf32enp4uMDTyyEN3MT09jb2plednr7AULfH5L32eJjHGk8fHaVCqWfSv0t/f
      zZWJZba0mum974tY0ivM+lcIBRI0tLQgyo2cPXqSzqFW7u13c3Q6RiEWpMVpQtN1O4/ct/VW
      XlfJJ8S1ADC6+2nUhWnvaieXimBydLFj82bCnmWa2tqQq/V0tjXQ3t9ALryCVlbF3b+NusGN
      oRTDNjiEQi5jaNsOJqYmcfdvI5vJoNFoGdq2i/7eNmamrq7ba7ZYsFtM5DVaujRZHA0OSGaw
      2+zICkWGtu3CqqmwfVMvZr0WvVqJzqBDp1DQ1DuIkEsSi65x296tZGsl2jZupzs9idDkolFf
      RdbceMsuqOST5RM1DhDxzhCqmNnS13KrmyL5GfGJCgCJ5CdN6gWSrGtSAEjWNSkAJOuaFACS
      dU0KAMm6JgWAZF2TAkCyrl0XAGK1QDxdoFrMks7f3MTyZDJJOplE4OYyxQGI9QjdW5sAABs3
      SURBVBrxxDszulVLOTKvnzeVSpFMJkkm31xV5WYytCHWyOYKFDJxcrks2VIN4IYrvLxhzbd0
      LdvddZ/rLZnebpSBLp+/uqjG+2W4q1dLpDL5G5alokHOnz/Psi/4Ph8MSsUi1WKG8+fPs+Rd
      e0f5e31GgFqpSFUUGL10nrmld676I1QKpLLvtk4OrC7P4Q1E3redNyTWKJaqLEyPc2V8mncM
      Pol1Eje4J96wODdNJv9620SReDz+4drxNm8mxgKmxoY5OzxBAxEOjobp7WphfnqCer1KKpMj
      kcmz5lulwekkl4rgWYtz8cwp/B4PHYODvPrcs8gMRnSyGp61OLVCFlGpopwOceLiLIpqFjQm
      FEKaRx/fT2dPH+HVJdRGG2qFyIVDz7Kc01EtZTHotBw+cgTPsofBTYMU0vGr2dcGOln2x4iH
      14hHIxSLBbL5IrF4CpvVwvkzp3C3tPDKE/+Epm0bVr2S+ZlZjEYTlXIBXyCExaDhyvAVNEYb
      eq2aA/ufJ5VM0uBqRSWW8QSinD11kq7uLhT1Cou+EAadhkIhRzAUQU2NK2OTlNMRckobiZkT
      nF7M0um2MDWziE4hkCmLRAMeFDoL88NHmPLX6etsZGZyHL3BiNfjQW2wYDYJTE3GKIdGCJR0
      xKMR5qeuoNLq8QejiOU8NbkKrVqFPxCgwelicmKS4UsX2LVzK1MzC5h0Cq5cGUOjt6DTypiZ
      XUYrl+ELBtHI60QzZcwGHav+ADabnZGxKSLzw4iONsqZFKteD1ZHI5OnDnBuPolFp0BAyfLC
      PKuzUxR0FjLLF1nKWxELURT1CtFUluPHTmO36MiUIeJbIJwqko8HEdV6VpcW8KyFkFWKqI1W
      kmurKM02ZkZGsajTXFjIoEAgEw2AxkRgeYajp89gs1pIFyrEg15S8SBjizE6HTKeOzhCq0NH
      PJsjHYtz4KUXaWrtwmzUU8wm8QRiFJJhMtkcJ85exqiqU1Po8MyOk63IiPhXXs8MuEgonKBY
      yGG1Wt8aACJnz5zG5w2wY3M3WYWZl//pb+jZeweTozOkEylIhViIxbE0tLK6MMX5y2O4Gmzo
      tFpae3oILs2TiWWIlPOMXh5DVkmSLMnpscHo4iqJkpqFyWE2bx3E6w0TmjvDhDeNVmciMj2M
      1u1i/NJFzJ1DTJw7jdFiQqvW0NPbw8GjxzCb9Hi8fvLBVZKlEologJKukYunDlMsFOnv72N6
      eo6A10Oz08zq6irD4x56BnsZPnqC+ZUpyvk08ytxJuYW2bXvNmYunyWVTCK3NDPU30nEs8DJ
      sTnsBh0z8zOEwnF6ujo4dvQYU+Pj5EtFQoFVVoJxHrh/B5fOLdLaAGWdhRMvvMLykg9BLyO8
      usTY6BKRxcsY2ocoFECbmiapa+PQ439LUWkmEC7R12XBsxSnp1nD6SselpbmqGvUlGNhQpEU
      mWyIRKZOi11DpqrGatJx/uQhdLY2ivEAwUiYBY8fTyBEJRjgss9HpzbPdx47ikkn4M8UWQuE
      6OvuIJVKYbNamR4fQd/YyczoBZyqEnVHK49/61v07d5HbHWZilDn4Esn6N+9Df/MIv17drA2
      fgFDx3Y2tjcyMTnG+PQCKqWM5YVZKoLA9MhFKsUCoZKW6QsHCSTrGIQsFZ2N1kY70USKRrsN
      7+IsyZoKWXweS3MHs7408+cOkFE1o5YVCKyliC9fIKNwY6lHyWjb6Ww0IJTzXJpbJRleI5NO
      IleqiYRWKWWyjM4v0d/Vzuz0JLOeFeSiyPzMNPVyhsuXrpDPp8He9XpmwG7KcS+mhgYcdvub
      AZAIepBbOtncZSNaNVFLR7n34c/inZ1j5747kVFmcGgDsUSWrvY2SrkUeqMVlUJAqdZgtDZS
      K6aQqdTUBRmNTifN7iZ0BjMNjU4KBRFVNUn/5u3YzBayiTBdW25HR5m2rm6am+0se8Lo9Qbc
      zU1U8jnUMlBowNXSg1IoUKmKNLmbkJns3LmtH9HoQiMIKGUiGrUSd3s3yWiArq5OQqkqer2W
      1jY3sWAYi9WAXKlDpzOQzuXp73Sj0VoxKsrUDQ5klRxmmxOVRoNCJiIXihhNFuwOB4lMCZ28
      gtZkQa/VUiwLNNqt5LN53P2DuBod+JY8DG0eQGcy0tTUhE5vx2qQ0bd5B/FQCJvdTt+GARYm
      x9g4tI16XcRoNmFQ1FnxB8jLTOwdakel1dPe4sZqtSFT62l1O9HojGjUGpxOG7VihkCyzM7+
      ZqoKLTKFGqVcxGUzozSa6HA3EczAUF8TcqUKs9mO2aDH7TCB0ohWI2N1ZYV999yPWM7SsWEr
      S9Mz3P3gp4mshWhsbYdKifbeTjKxCO3trSBXMzC4mYWRc1RlGmRCBavdic1kxOVqwGIxkswI
      tHT3oCwn6RkYRKk1sHdbF6GMimanGQCtVktkbZXeLbdhUsvQNbRRiXkZ2Hk7lUwMs9WJSS9D
      Z2tBVc3hbO2kWhVwN+hZXUvS1d2FQQVyjR6X3Yi7Y4ChoUE09TKhdAmlrI7T6cZk1ONssGLR
      q8mrHfR2d5CL+K5lBhx066iaO7AbVD+D7wKJdfKFMob3WJopl4qy4IuydfMgHybHbNi/Qqos
      p6XRjtF063N0vjUL3S0h1hgfHaO9bxNWo/baZo/HQ1dX161pE1f/9xodm2LD5q3oNW+8+FzH
      4/HR1dUJSC/DSdY5qRtUsq5JASBZ16QAkKxrHyAAatQzH3IQRCL5mLo2J1isJigf/2tkhg5U
      mx8CoYqYjyG3d1HPhpCZLVQuPYv6tq8hlsLIDE2ACrnedAubL5H8eK4FADkvMksvwuplEFMo
      2nZSndyP3NKGWFeBvIxYLlAZfRRZNYZi4zeQW9y3sOkSyY/vWgDIbNuQm5eh+24Uzg4Ujjbq
      znnkJivVlRnUu76KWCoDWcS4B5myjljMgt58C5svkfx43nccQKxmEatIf+pIfiZJA2GSdU3q
      BpWsa1IASNY1KQAk69p1AXD06JFrP2fjQfa/coSob4Yr01dnD73bjKzV5VnOnjhF5n2yOL/d
      3JVLN33MW/dNJRK8x8Sn65w5d/Yd2y5duPSedQR9i5y5eOVd60yHV5hZfv8ZXGfPvPPc7+Wm
      ZrzdpOGzR7g89ZbM3LUiZy+OAAKXLl1+c3u1wMUrkySSP7lzf5Io3/pLNvvmlDRTgxuhdg6n
      c4BAssqZK+Ooa0VmSkXKopwut50Lw5N87ku/wNL0BEms9MUDHBiZpafNTixbYezcWWRKGZ/+
      uc8SikQpJeNsu/0+vNPDpEsV9MUiojPE6YkraMph5D0Pcnu3ntPnLiETy+TrGvQqJXWxhr5Y
      JKtfJLi6SqPVgGymRKYscs/99zBy5iTZah2VKDIwNMjY2CyfeuAe/uU73yZZVVAuVxka6GJy
      YY37795LMBCkLhdxxYyUUPDSy8f4o9//90xcPk9OpufCkZf5+m/9b5w5eYxSpY5MKaej2Y3H
      s0zPxq14Z4dZWC6R3bEBrd5IYGWeUiqGsWcrZr2GPVs38vff/itqKgtVQaTBpCRXVXD+1Gl+
      +49+n7GzJxBVOkKhGP393cQyJe7YvY2FpXnyV9KoDHbu2reTY0cOUZepUWkMtDkNLK6lUAk5
      mlo68Pv83PmpBxg+82Yb25qceDw+2nq6OHJxhvvuMPLtv3qBPXfcSV2uY+TccZDJiAV9LM2o
      SFc17NiyAf/KEjKhhF/lo5ZaYqbQwtcf3vvTvhdvievnBNfF6+ZqFrIFYuE41UqGy8Pj+Lw+
      fF4/iVSYFY8Xlc6MUSOnoaUPR22Vv33qNe65ay9ef5DLI2M0OmyY7C5OHHqVYqVOIpnGZTfi
      9y7ToKswE8pw7NgRNnXbOTcWwOFoYPzsCSLFEnZHI5PTHmJBz7V9/QE/F0eGWQ148fq8lBMp
      0nVY9XkpxdKUCn7+9blXKBeLFGqgN9oxGzQUUwn2v/oq+crVeb+CILAa8BIKrTGz5KfBYkSk
      zvDMAr6lOZo7B3Ba9Xi8XqyyDCemvMiTS2haN/HU3/w5KkcXYjHGwuoaz3zne7i334NRoUQt
      F7g0MgHIsTQ60Km1pMJrrAWDXBkdxdVgQSbCWjDEyISHdC7BqaMvUylfbZcvsEogGiUc8gNy
      /JEoyXQKr2eJU+cvUYysMR9MEFqaJFMukinUrmtjeW0Re98AU9OL9HZ04ff7sLsaiATXuDJ8
      EaPVScC7hCAIvPTKq5Srb1wPEb/fg3dhgmAkjsHm/Gncex8L1z0BOlubSaSz1Co1XE4bD9x1
      O4FsnaGhFiwWHbVCmlxZRKVWMDl6iXCyQrJYp2+gh2lk/Nln+7g8Os/mDQN09Q6iVYJKJsNg
      1uMLxXAYr04eSSYjWPq28+D9vcgNVoKBIH/8x79NslSi6YGH4dIoGo2BRz5/J08/9jiO/h08
      eH8vhapIb9PDCLUS5XIVhUqNkMyyZetmMmURsSbwlW1ugqE4RiXce8+dBCIx6sjZvGM3idcn
      pvd2NyOqNJitdhpRI9/Yiww5D9y5B5nBydriGKlClVR8jfLgLr52b42GrkHSM+P8/n/6O5bn
      pvnSr/wqibCfB++7m9WlGXY9+BDpoojbZgXgrr13E4lEkMtlqHQmugf1qKijlMHGoW1sokK2
      pqWzUU8wfXXifmdzKzWUqEWRKgL9PQMoRZG6HDo62ohnq3SmIvRv2cz4yCQNRuV1bXR3bWRx
      apz779jNgi8MQoUml5N6rcKGLVo09SIamxvPwhz7du6gKDdCtUB7dxcIFVqcFrQWJ/ni9QkC
      fpZJ4wCSdU3qBZKsa1IASNY1KQAk65oUAJJ17VoA1IoZjr6yn9GF1wd4xBovvfAsx156Gn/2
      nQe+kRbw7erlHPtfPHLDMoClsUs88+o7y+vlLC+8ftwbA0JLw0cYW828a12lTIijZ94c1Mnn
      CwAU3qVtbyWUMrxy9MwbZ39HWr5cMnytPW8IL13hzNjqO+rKF977fM/tf/76/V9v57tdw1wq
      cS3F4fPPv3Bt+80PVgm88sorN7nv+nZdL1Autsx8SM2OoVYynvM8PyXnV35uCz968kc0b+ni
      4DM/YmjfA8wtzGCsZejr38DxkUX+/E//kPGzR5gJlfnalx7mb/77f6Nj0xbU1SIVFKwuzdG5
      414evmsnJ1/4AfMFI46GJv7Ng3t46sn9lColNg1u4MKpk3Rt2oasUkWmrOMU45yKW9jXZeXA
      S6/S2rORu++/G5ciy4GT07R3t5INBpArVKCEkZlV/q/f/VX+8r/+A/ft20SsIOPLP/8QT/7T
      35AWzeTjAbbt2Yd3JYC7vZt8NoKqEEbV0APVEtFElpauHvYOOfn2Px7BpEjTtWk7volzNG97
      gAf6lfzNj2bZ0mXh3NmzbLntTjo6O3n12Wf4k2/+Gc8/8S+Ich0KhYq+dhvjSyHq+QzJao1t
      vV0I9RonRxbQ1lL83p98k+/8j/+XHXvuIOj389BXvsqRA0+hrNcR5RZa+t1EI1lCviUsZjtf
      +vIXeOWVlygWc9TrKr7wyJc48NyT1Osq2lwGXj47y6auFkrlAoODg6wFlkglamzY2MvOPXtQ
      3Mq77GPs2jhAtZBk/6vnuO322wlHkzibN5A68K+cuywSXgvSt6cfV/9uytF5ktkMLreDTK7I
      A/ffgxy4fGUSmc4CgEqlolrJ4lsO4WxxYDSomJtd5OE7Bjg3FaGYnWLDL/4aoMKul5OqC1SU
      OlKlOtNjo1ATaWmAqWiCiaicNvVWdt/7KZZHL2N3urCXiiyHMliNATwrHmSaBrq73DjMWhQa
      Iy6HmYWFBXT2NgBqSh27Nm3g/Mkgq6k44eUQNquRpZUlVNUipliZVL6IKDMQzWa4/46vYlFW
      SBTrTI9dosHkYsuGTuSqNCqZQDLkp3/3vXS5dLz0yjGaXQ5kIix6VtAqDVSreUJBC0qtmkw8
      j05T5OJoiTZ3Iw/cdy8Lk+eQy0ScjW5WV5aRiXWK1TqFQg69DELxFKFCgoHuAcLBELlkjGxZ
      wO+ZJZQuYjeaCSULBHwe5Ao92bKDB+67BzG2QgwZOaWFuXkfn71zOzGtQ7r538Mnchwg6Zvg
      0EyRX3jwtg98bCHpY/+hGb76Cw9+BC378Tz9+Pd54AvfwKZX/UTqG798np5tezAoP0T6u3Xi
      ExkAEslPitQLJFnXpACQrGtSAEjWNSkAJOvatQAQqyWOvvAo42v513/P8t3v/iPHfvQo87F3
      rvzl9XlvWGG9nOU733scuJkZTjW++w//+CGb/k4vPfsEYzNLeL0+vvsPf3+DPUS+98Pvk0gk
      b1D2NvUKiVTu3cuFFP/5//g/mY+V3rOaR3/46LWf3349Vnw+/uEfvvuexx/4waO832pYpdQa
      a5Eo/vC7DxpKbuy6XqDjLz6KtuNe9m5uJb18lhemlfzK527jqb/7O9y7+nj5+ePs2LWLV89e
      YkezmcZGN2O+OH/+p3/IwWf/mbmoyO//+1/h7/7qv2N2tUGlQia+jMbeSiicYrCzAU8wTSlf
      YGBjD86mTpbGziPodKQTBbbvGOL+e+/jqcd+QLwgUE0l0Lvc/OYvfYMnvvdtojWRSk6J1aZG
      kGno7erkzm3t/OuLF1HL63gXV/ijP/3f+R//+ZtYG9qQKUTcZjkzETn/4Xd/nace+yHxmgy9
      XE4mEUauNCJDRmuDnJlwFU05h9XdQjq8xD179nJ5NoTBbiHlm6CqdOAwm1lIVvl/fu+XmRof
      5tkDh+lrb+WRX/o6x3/0JKdnIjSrU1St/QipFeRaGx2uJnTKAqO+HE6rglQsht7q5rd+9av8
      x7/4JvamblSiQIO+wkrBzB/+u2/wrf/vL9m78y6+8+wr/MJ9d1I1iZw7PUN/u55N+z5Hv63A
      /3z8JK1NVibOH6GlbzOiTARDA4H5WVrtemyDewjMTdPS1c3Xvvi5W3iLfbxdGwirlbKora20
      OnSEo0lcXbsxXHiKcxdEFCYbba19bN9VQasscffuLbgsJjQqFQ/0DiEHqujobtEjlLNoLA5q
      5SII0N23CXd7OxMLIRSyIj1tahJFJS6bCY1RTV1hQCkT+dK9W4nbBwHQaXT0Njfhm19GUa8g
      AEpzI01CjqLWAHoNrRq47c47UdZSqOUivd2dpNJ5lAo5W7fvYG01hE6vR2l2cN9AJwAajRaD
      Ug65PGqDCZ1CgyCUMTR0cF+fg4mRUcRahb07txFOFVDrdcjqIr09vURyCspVJQNOOSVgaWGe
      XZt7yAh6KuU6doeLB+4boJBYY9Xro6RR097ZTTHqo6Q309vRRCoeQmuyoxVrVFGwfcd2/IEE
      Bp0SncPNPa1XV3jZu3MbY7PL3L1vB/lqAbVo41MP3Edrg4LFtSC7utqplmq4bGqE2+7CZLZh
      NBnIV6DRbKdBnkLX0kQ5HqZSvLnVPterj8k4QJ3xsUk2b93CzQzZVPMpFtbSDPZ1fOQt+7Be
      PLCfn/v8Fz6SUdhs1MvlhQT33b79I6h9ffmYBIBEcmtIvUCSdU0KAMm6JgWAZF27LgCqhRTZ
      8tU+/2w8zPHjx7kwPPGOg+LxN3um3963Pfz/t3d3P22VcQDHv7SnlL6Xnpb2UDpKgTKmYdNl
      LtFoNGZ/gN57vxv/Ci+9d74sWUy8msb4OuPrcCgRHTIGjMEoby20tJS+0RZKab2YWTQmS4wv
      u3h+n9uTc3KSc745yXnO85ypCXby92fQbKwssprMkEwsMT7+Pamdf7762H4hS+0Pq8m1GvsU
      9/+6jEc2m3vocXZ3dx+6PZt7+P5/OAP29vbI5++PLTQP99kr1WgfN9gr/Pm9fKNapFT7m8vn
      if/Ugz/FA0x8dJmq7zSG24LVbufm7RlGB2OsrK6SzeUwtZok07vc+OYrwiGdzVwZu9VCtVJi
      azuHrnczNTnF2XNPkrw9zuyujerSBPvNGsfBM0x9+BbG48/Q1a4yeydBpwk2Uin8fj/Lc9O/
      fxNf597qJvulPYp7RRrHTXK7ebq9buZmfuXO5Fes1z30G25+nZkjoHtpYWJhfg6fx85iIkXQ
      7+PKlUu4fb3UCmnKDROFbBLN0sWdpVVc1jZvXH6XZ595mmopx/LGDh3tBqmtbfy6zrWPr/Lx
      NxMYfh1Xl5ml9Qw9ejebiUUKlRqJ5A61cpF0chWLw0PrsMrn13/AdFihmk3w/vVlYmGNGxPL
      mJpF7L4etI4mX199k7TWRz6dZGHmJ1qYSO3sEQroj/AWUNuDcYBKZo2VrSK96Qz0DQAmNu/N
      E/JFOCyvkz5wM/7tOIbhx+HxsLC4xK2VJC5LJ+VSgUi4j3g8hqZpdACZ5Aau6Cj+IwdrlQPc
      hplwoJvyQZPJa18wqMNrH6zy3Gic4MgIWrPKT7fXaVW2ievw3lyJ85Ee7mQ3uHjxVdJz1ylr
      g1isNmq5BV6/NMUrF4a49PY7HGhBXn7pRT795Auamo1TJ4dwef3cmp5EdzpIZqcxVbep2Xrw
      O5zM3m0zFO0F4LMvv6PrqMEnO3ni0TAj8Tjl/QaDYR8LcwtMz05j1tw8Fh9g6e4yyWydSK+P
      yJlT/HhzmumZORyeAVydDZZnf+agacOIjDE+OYkld8C1rI3nzV4qa7cwRkb55e4i6c0ljBMB
      fNltbvwyz+lTw4/o8osHTwCrs5uhfgM9GKJWqdI+KLKTr9HWOnF7fGiNAoVyleFTZ7C26rSt
      TgKBHmzmFk6XF7vdRG90hM2VeVJbKcJjL1DdmKVuNxgMONhYW8PbF+fsSASvrYNESeP0gA+T
      tROPN0g0NkQ+k+SJk/0kShoXzo2Qr9exd9qJ9MfwB0Lcnb+NzWajw9LFUKyPze0yTz0xiq77
      2E1nGB6MgtXJQMRAOz7EoUcw0yIQCmD0GMRiQ7TNVgZ6uzk6atETieEyH3Fk1zGcGharDb03
      isN8zH79EIfDgWGEsbt99IdDZDIZAqEgUcOL3R+mWKige7yYOzugw4y7O0A4Oky7luWx0TEO
      rG6CTguD8WFOhLpZWt/F3mmmrzdILNJHtX6I3x/EarPhdjkf7Z2gqL81DjA99TNj55/i35mv
      9GcbiXuEokNYzTJ7Sfx/ZCBMKE1egwqlSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQil
      SQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoE
      IJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBC
      aRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJT2
      GyAlxA1wnRaTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Solution 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Solution 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Solution 3' width='123'>
      iVBORw0KGgoAAAANSUhEUgAAAHsAAADACAYAAAAkyhzJAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANb0lEQVR4nO2de1RV153HP+bIW3xeEKii0KAiBLU+Ugi+ZhBDY4TRrGqpRlypMfHR8dE2
      U+kkg1NIk1mKqSSGRnyuNLgimaCNDcQ22hCtaCqmaRwBwdgmIk/LDQ+Bmzt/gHiBi4LeAxf2
      77MWa8k+Zz+OH89jn7PX1wFms9mMoAQP9PYAhJ5DZCuEyFYIka0QIlshRLZCiGyFENkW1NbW
      9vYQdEVkK4TIVgiRrRADe3sAdyePtNW7yLUo+VZMAs9HeQFQU5jJrpQsCuo0DCGLWfvMHHy0
      5v1M5afZl/xbcstNuIyezdMblzDRreePwF4YYPcfQsqyeek9b56Le6jjtvo80pJOMX7dKsJH
      1JGfmcKb2jISon2BEn6ftIe6J9YRPc6Fipw32PbpVBLWPIwznT+MmUwmXQ+nN7H/M7uiHG1k
      iNVN9edzKJ8dy1OeDoAD46JjCEg8R3G0L37FpzjrG0P8uMFogGf4UiI//i3n6x8m1BlcXV07
      tFdbW4u7u7u+x9OL2P09u76qkmHeXla33bgBAf7Dbxdo4wn0KqfSBPyziuHf9kdr3TicwKCB
      VFTqPGA7xu7PbKOxmtx9q5vv2Y7ujJ20iBUrw/DRoOHmA7i4WO6toWklXCuDmzdv4uLi3Kat
      B7RSrpcCPj03fnvC7mV7RG4hNbL5z6b6CvKP7+X1wx5sXRKAo9M31NVZ7m3CZPLC0wOcSpyo
      q6sHbgv/xuTJSM+eHL19YfeXcUs05xEELohgzOViyoChQ6GgyOK6bLrExRIDwzVgyDAqLxdx
      +3Grkot/a2LE8A7NKoOdyy7h+O6DnP1HDY0AjVVcfOcYV4Mm4AE4TwnHcDKdnNJGMFWTn/ku
      BZOm4QfgF8b0q++SmV+NiUZKc9LJdp/OFOc7dtivsfupV2PpWdLTDpF7xUiD5sLo0OU8EzsV
      Q8uTV5t59oxYNsaFtm5rM88OmM+6Z6N58A7z7NraWqtP6f0Fu5fdk/R32XZ+GRdsichWCJGt
      ECJbIUS2QohshRDZCiGyFUJkK4TI7gkKU5jtNoCwHYUWhU1cPbKBmV5ueE15lszrHSqRMtuN
      AWE7KGy/6R6x+0+cfZ8qDv3ibR5PWMk7FqVNOVuI2DaM3ecr+E7TVSrbvaWtOvQL3n48gZXv
      YDPkzNaZqiObOTAtlQ1BDhalRjJf/yNxKS8wy9uZQaPH4evephKbD0wjdUMQDu0bvA9Etp40
      5fDizjH8csOEdpfQC5wpXcoiK2sooYmcF3cy5pcbmGDj667I1o0mzidux+3leKZ0kGbkn6bP
      2fP4FLzcBhAcu4PcqpZa5xPZ7vYy8R0r3TciWy8KU9has+kO0vxZ/OsPuVJj5p3IP/PUf5+k
      iUJSttawKX6KPg9TZqGVmpoam7WVvdbVDHT8CU02F5hLzGmxG80nGm/tfcz8dGiyuSB7rdnV
      Wh1CzckF9z8mkW2BLWV34NjT5lALY5XpPzTP+OnvzV/Vmc2X9i4xz0r81Fql5n8ENhqCTL16
      iWFLdrLz2lrmeUfhEJXGWwesPq3ZFFmWZIEsSxL6DSJbIUS2QohshRDZCiFTr24QvSW9t4fQ
      LTKTlrb5Xc5shRDZCiGyFUJkK4TIVgiRrRAiWyFEtkL0kZcqJWQnbSWj6XESno/iVipaXtpq
      drXNuWzdLlGWHekTsmtOH+ZcyPeY+hfL0jJKy0NZlxpHx8/+JWT/5kOGrUjktVtRlvvPtEZZ
      qor9X8ZrPuHNj8cSFzXKIq0QoIJybSQe1uq0RFlGjxuMhkNzlKXxLOfre2TEdoudyzbxf5nH
      MSyOak0abqW+isph3lgNupQoS6vY9WXcVJzJ+87fZ71fe9OA0Uh17j5WN+dc4j52EotWrCTM
      R+tSlGVnqcRGo9Gmx9CbtD8WO5ZdQnZmPY+u98OKavCIZMvtnEsq8o+z9/XDeGxdQoDT3aMs
      VUglbn8s9iv7r+9z9OJpTGtOtinOXX2WmITnibK8fmvOjAhcQMSYJIrLIGDIMCo/K8IUOrHl
      H0pLlGVED47fDrFf2Q/F8VpqnEVBHmlbr/FYy9Sq5PhuPhjyKIsmj8LNoZGqi0c5djWIZR6A
      RxjT39pDZv6olmD55ijLBJUfxbFn2XfBa/ZCJqSn8cKBKxgbNFxGh7J8fSy+zVuJfHou+5Lj
      WdMaZan2tAtk3Xgb7rZuXFaqCH0Gka0QIlshRLZCiGyFENkKIbIVQmQrhMhWCJGtECJbIUS2
      QohshRDZCiGyFUJkK4TIVgiRrRAiWyFEtkKIbIUQ2QohshVCZCuEyFYIka0QIlshRLZCiGyF
      ENkKIbIVQmQrhMhWCJGtECJbIUS2QvSRtCTrqcQ1hZnsSsmioE7DELKYtc/MaY29lFTijvSJ
      M7s1ldiysD6P9ANf8t0tr5D6WiIrvE+R+rurLRstUolTX2HLnAr27z+D4jm1fUB2J6nE9edz
      KJ+9lHBPB9AGMy46hoAL5ygGSSXuBDuX3Xkq8Y0bEOA//HaBNp5Ar3IqTUgqcSfY9T37TqnE
      DTcfwMXFskRD00q4VoakErfQb1KJHZ2+oa7OssSEyeSFpwc4lUgqMfSjVOK5Q6GgqBL8Wi7l
      pktcLDHwiAZIKrFV7Ff2XVKJGRqOISmdnIdWET6ijvzMdymYtIxlAH6SSmwN+5V9N5wns/TJ
      L9iV9O8crNMwzIhlY5xvy0ZJJbaGpBJbIKnEQr9BZCuEyFYIka0QIlshRLZCiGyFENkKIbIV
      QmQrhMhWCJGtECJbIUS2QohshRDZCiGyFUJkK4TIVgiRrRAiWyFEtkKIbIUQ2QohshVCZCuE
      yFYIka0QIlshRLZCiGyFENkKIbIVQmQrhG6ym4oy+EnMTKZNe4E/ATVZP2P+r3Jp0qtD4a7o
      FKBznYykV3Fau4n5P88DwC18DsEvneTCf8xom0F6B6ryDrE34zSFpXWYNBc8g2J41iKMNi9t
      NbtyLSp8K6Y1yFaCajuik+xLfJ43k/m7R/CHn7cUuQ1iUPXX1HS5jQbKjQai1ifyoKcbDo01
      FGW9Qurv/EmI9gXKKC0PZV1qHA91qGsRVDvOhYqcN9i2/wwJa9ROTNLpMu6Fj++XXLt+6/cm
      Kj/I4qPx/ozpchuOBMz8VwI93XAAcHDD/zshuNbciqGsoFwbiYe1qhJUaxWdzuxx/GDDGJ5c
      /TJ1NHLhiXlcv+JI5PbnuiHbAlM9FV+c42hGEWHLFzSX1VdROcy7NXu8DZ0E1f6lktbsUhXR
      LfRu8Kz/5PC0YvJOXeYGLniFTCfY07Hb7dy6Lzv7zuXJVc8y9Vb+qNFIde4+VucCOOI+dhKL
      VqwkzEeToNoWeiyotvrTQ6QdLaT1r/TMCTIJ4on4GMZ3o53JT6WS+lQjNaV/5/yxHeybvIa4
      yW7gEcmW1MjmnUz1VOQfZ+/rh/HYuoQAJwmqhY5BtTrdsz8hdcMOTpXaqj0H3Dz9CY+bh+nY
      x5S136w5MyJwARFjLlNcRnNQ7eUiTK07tATVDm9fUS10OrNvUl8XyfpX4pl1z20U8FFmLX7/
      Mh5vd2c0Uz3XTp8if+hU3IGS47v5YMijLJo8CjeHRqouHuXY1SCWeQAeElRrDZ1kz2B+9Kuc
      /RxmTbzXNgwYHDM4mLCbK8YG0FzwDJrPqrjm6ZPX7IVMSE/jhQNXMDZouIwOZfn6WJqjaiWo
      1ho6BdU2UfTmM/xo9zUGuVtGw88l/shGHrZ9hzahvwfV6nRm5/JmSh3RO1P54VjL88mRwfp0
      KHQBnWQPZbhhLIGTR2Hou4nm/Q6dVDzI7MhC3vqgnJDpluWODDYMpvuzbcEW6CT7z7y9/zJZ
      PEpWm/LH2H4u4T6e0IX7QSfZs0g4d44EfRoX7hFZvKAQOr4u3c/WpAzy27yCtu+pV39HpzM7
      n7f+az9OK5Yz8auJrNqzh6QFfnx3cxxT9OlQ6AI6yS7hq6szmR81EiecGGIwELx4Fn8/mE2V
      Ph0KXUAn2W4MGvw1X9cY8PQupPgLwNkF17zPuaRPh0IX0En2JB6JusJnef4sWDqQ3XGPsfDf
      XuTU9JBufd4UbItOD2gDCftpBmEAj7xBxqSzfFrvQ9hkPzp/8yzoTQ+8zHTEM/gRFP8/T+0C
      G8o+Q/LCRD684z4y9epNbCjbj3k//rGVZb2AqZai91P5zUc3uGm7DoVuYkPZngRHRBBsWdRQ
      ymdZaby0PRvj1KUk/+9KZtquQ6Gb6HLPbqot5vTBV9mW/gnukZt47tDme1pZKtgWm8puKP2M
      rLSX2J5tZOrSzSS/9yv8XOWDtr1gQxN/IvF7mzg3PZYf/SSEkU43uXzqBJfb7ONFSEQwntYb
      EHTGhrKdGOrjg/blCQ6lnuhkn7nEi+xew4ayH2bjkSNstF2Dgo2R79kKIbIVQmQrhE6yz5C8
      MJkz+jQu3CM6yQ5k4oQ/cOSP1fo0L9wTOsl2JnRTIiHHfsb/fPQPysvLW36qadCnQ6EL6LZu
      fNuCTbwHcCKGQ63lsm68N5F14wohOWgKoZNsixy0lhK38DkEZ5/kgj4dCl1AJ9ktOWjzRty+
      T3Q7B02wNXacgybYmr6RgybYBLvPQRNsh67LSAa6+jEtwk/PLoRu8P9t2FCZBsBgDwAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Solution 4' width='123'>
      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
      znMNa1kCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Solution 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Solution 6' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
